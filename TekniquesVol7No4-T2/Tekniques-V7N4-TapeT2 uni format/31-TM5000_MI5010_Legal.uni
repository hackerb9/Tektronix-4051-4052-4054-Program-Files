4000 REM **** FILE 8 - MI5010 ****4005 F$="MI5010 Settings Test"4010 FOR L1=1 TO L4015 PRINT @D0:"<<";F$;">>  Loop ";L1;" of ";L;"     Unit ";P(N4)4020 DELETE I,J,K,K1,K2,K34025 PRINT @D0:"   Mainframe Test"4100 REM4105 REM                                               *** VERIFY ID ***4110 REM4115 A$="ID TEK/MI5010,V"4120 GOSUB 27004200 REM4205 REM                            *** VERIFY SETTINGS AFTER 'INIT' ***4210 REM4215 A$="INIT;SET?"4220 GOSUB 5004225 GOSUB 6004230 I$="OPC OFF;USER OFF;RQS ON;"4232 B$=SEG(B$,7,LEN(B$))4235 IF B$=I$ THEN 43004240 GOSUB 64004300 REM4305 REM                                              ***** 'TEST' *****4310 REM4315 A$="POWERON"4320 GOSUB 5004321 WAIT 4325 FOR I=1 TO 5004330 REM  Pause to allow sufficient time to complete 'TEST'4335 NEXT I4340 GO TO 45004345 GOSUB 6004350 REM ^^^ Get results of 'TEST'4355 I$=" 0;"4360 IF B$=I$ THEN 45004365 REM  Do a 'GETSTA' to check status byte of inst.4370 WBYTE @95,63,24,64+P(N4):4375 RBYTE X4380 WBYTE @95,25:4385 IF X=65 THEN 44004390 PRINT @D0:"***** Status not POWER UP after 'TEST' command."4395 PRINT @D0:"Staus byte returned was: ";X4400 GOSUB 64004500 REM4505 REM                                          *** OPC, RQS, USER ***4510 REM4515 RESTORE 65154520 V=04525 FOR I=1 TO 34530 READ H$4535 FOR J=1 TO 34540 GOSUB J OF 6000,6050,60004545 NEXT J4550 NEXT I4600 REM4605 REM                                              *** TIME, WAIT ***4610 REM4615 RESTORE 66154620 I$="TIME 12:00:00"4625 A$=I$&";TIME?;"4630 I$=I$&",60;"4635 GOSUB 5004640 GOSUB 6004645 IF B$=I$ THEN 46554650 GOSUB 64004655 FOR K=1 TO 34660 A$="STOP;"4665 GOSUB 5004670 READ S$4675 A$="BUF ON;WAI "4680 A$=A$&S$4685 A$=A$&"BUF OFF;EXEC 1;WAI?;"4690 I$="WAI "&S$4695 GOSUB 5004700 GOSUB 6004705 IF S$<>"INT,5.00;" AND B$=I$ THEN 47154707 IF S$="5.00;" AND VAL(B$)<VAL(I$) THEN 47154710 GOSUB 64004715 NEXT K4720 A$="STOP;"4725 GOSUB 5004730 A$="UNT 12:15:00;"4735 GOSUB 5004740 A$="BUF ON;WAI UNT;BUF OFF;EXEC 1;WAI?;"4745 I$="WAI UNT;"4750 GOSUB 5004755 GOSUB 6004760 IF B$=I$ THEN 47704765 GOSUB 64004770 A$="STOP;BUF ON;BUF OFF;WAI?;"4775 I$="WAI OFF;"4780 GOSUB 5004785 GOSUB 6004790 IF B$=I$ THEN 48004795 GOSUB 64004800 REM4805 REM                                                    *** ERR? ***4810 REM4815 A$="INIT;ERR?"4820 I$="ERR 0;"4825 GOSUB 5004830 GOSUB 6004835 REM ^^^ Flush out last error code4840 GOSUB 5004845 GOSUB 6004850 REM ^^^ Get up-dated Error Register4855 IF B$=I$ THEN 49004860 GOSUB 64004900 REM4905 REM                        *** Monitor for card-dependant tests ***4910 REM4915 FOR I=1 TO 34920 ON SRQ THEN 51004925 Q1=04930 S$=STR(I)4935 A$="SEL"&S$4940 GOSUB 5004941 FOR I9=1 TO 254942 REM Allow enough time to generate SRQ if slot is empty4943 NEXT I94945 IF Q1=1 THEN 49954950 A$="NAME?;"4955 GOSUB 5004960 GOSUB 6004965 C$=SEG(B$,6,3)4970 X7=POS("   DIO RSC DEV",C$,1)/44975 IF X7>0 THEN 49904977 IF Q1=0 AND C$=";" THEN 49954980 PRINT @D0:"      Not programmed to test ";C$;" cards."4985 GO TO 49954990 GOSUB 52004995 NEXT I5000 NEXT L15005 RETURN 5100 REM5105 REM                                       *** Local SRQ Handler ***5110 REM5115 POLL A,B;P(N4)5120 A$="ERR?;"5125 GOSUB 5005130 GOSUB 6005135 IF B<>98 AND B$<>"ERR 220;" THEN 29005140 Q1=15145 RETURN 5200 REM5205 REM                                             *** Card Tests ****5210 REM5212 PRINT @D0:"   ";C$;" Test - Slot ";I5215 ON SRQ THEN 29005220 GO TO X7 OF 5225,5235,52455225 RESTORE 67155230 GO TO 53005235 RESTORE 68155240 GO TO 53005245 RESTORE 69155300 REM5305 REM                                                  *** NAME?; ***5310 REM5315 READ I$5320 A$="NAME?;"5325 GOSUB 5005330 GOSUB 6005335 B$=SEG(B$,1,18)5340 IF B$=I$ THEN 54005345 GOSUB 64005400 REM5405 REM                                                  *** FSET?; ***5410 REM5415 I$=""5420 READ I15425 FOR I2=1 TO I15430 READ X$5435 I$=I$&X$5440 NEXT I25445 A$="FSET?;"5450 GOSUB 5005455 GOSUB 6005460 IF B$=I$ THEN 55005465 GOSUB 64005500 REM5505 REM                                                  *** FLAG?; ***5510 REM5511 IF X7<>3 THEN 55155512 A$="CHA 2;"5513 GOSUB 5005515 I$="FLAG 0;"5520 A$="FLAG?;"5525 GOSUB 5005530 GOSUB 6005535 IF B$=I$ THEN 56005540 GOSUB 64005600 REM5605 REM                    *** Verify Commands with ALPHA Arguments ***5610 REM5615 V=05620 READ I15625 FOR I2=1 TO I15630 READ H$,K5635 FOR J=1 TO K5640 READ S$5645 GOSUB 61005650 NEXT J5655 NEXT I25700 REM5705 REM                  *** Verify Commands with NUMERIC Arguments ***5710 REM5715 V=15720 READ I15725 FOR I2=1 TO I15730 READ H$,K1,K2,K35735 FOR J=K1 TO K2 STEP K35740 GOSUB 61505745 NEXT J5750 NEXT I25800 REM5805 REM                          *** Verify NEXT;CLO?; on RSC cards ***5810 REM5815 IF X7<>2 THEN 59005820 V=25825 A$="SCAN 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16;"5830 GOSUB 5005835 A$="NEXT;CLO?;"5840 FOR J=1 TO 165845 S$=STR(J)5850 I$="CLO"5855 GOSUB 63005860 NEXT J5900 REM5905 REM                             *** Return to Card Test Monitor ***5910 REM5915 RETURN 6000 REM6005 REM                                          *** HEADER & 'OFF' ***6010 REM6015 A$=H$&" OFF"6020 Q$=H$6025 GO TO 62006050 REM6055 REM                                           *** HEADER & 'ON' ***6060 REM6065 A$=H$&" ON"6070 Q$=H$6075 GO TO 62006100 REM6105 REM                             *** HEADER & ARGUMENT & HEADER? ***6110 REM6115 A$=H$&" "6120 A$=A$&S$6125 Q$=H$6130 GO TO 62006150 REM6155 REM                               *** HEADER & STR(J) & HEADER? ***6160 REM6165 S$=STR(J)6170 A$=H$&S$6175 Q$=H$6180 GO TO 62006200 REM6205 REM                                                *** BUILD A$ ***6210 REM6215 A$=A$&";"6220 I$=A$6225 A$=A$&Q$6230 A$=A$&"?;"6235 GOSUB 63006240 RETURN 6300 REM6305 REM                                                 *** PUT/GET ***6310 REM6315 GOSUB 5006320 GOSUB 6006325 IF V=0 THEN 63806330 IF V=2 THEN 63406335 I$=H$6340 X$=SEG(S$,2,LEN(S$))6345 Z$=X$&","6350 X1=POS(B$,Z$,1)6355 Z$=X$&";"6360 X2=POS(B$,Z$,1)6365 IF X1>0 OR X2>0 THEN 63756370 GO TO 63856375 B$=SEG(B$,1,POS(B$," ",1)-1)6380 IF B$=I$ THEN 63906385 GOSUB 64006390 RETURN 6400 REM6405 REM                                                  *** SET E$ ***6410 REM6415 E$="Incorrect response to "6420 E$=E$&A$6425 GOSUB 25006430 RETURN 6500 REM6505 REM                                         *** First 3 Headers ***6510 REM6515 DATA "OPC","RQS","USER"6600 REM6605 REM                                     *** WAIT Arguments Data ***6610 REM6615 DATA "TRIG;","COND;","5.00;"6700 REM6705 REM                            *** Data for 50M30 card (DIOM30) ***6710 REM6715 DATA "NAME DIOM30,V79.1,"6717 DATA 16720 DATA "DT OFF;CHA 1;DAT 0;ARM OFF;CHA 2;ARM OFF;"6725 DATA 36730 DATA "ARM",4,"ON","COND","SRQ","OFF"6735 DATA "DT",3,"SET","TRIG","OFF"6736 DATA "DAT",31,"1","2","5","10","21","42","85","170","341","682"6737 DATA "1365","2730","5461","10922","21845","43690"6738 DATA "21840","43688","21840","43680","21824","43648","21760"6739 DATA "43520","21504","43008","20480","40960","16384","32768","0"6740 DATA 16745 DATA "CHA",2,1,-16800 REM6805 REM                            *** Data for 50M40 card (RSCM40) ***6810 REM6815 DATA "NAME RSCM40,V79.1,"6820 DATA 2,"DT OFF;OPE 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16;CLO 0;"6825 DATA "ARM OFF;SCAN 0;"6830 DATA 36835 DATA "ARM",4,"ON","COND","SRQ","OFF"6860 DATA "DT",2,"SET","OFF"6865 DATA "SCAN",1,"1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16"6870 DATA 26875 DATA "CLO",1,16,16880 DATA "OPE",16,1,-16900 REM6905 REM                            *** Data for 50M70 card (DEVM70) ***6910 REM6915 DATA "NAME DEVM70,V79.1,"6920 DATA 56925 DATA "DT OFF;"6930 DATA "CHA 1;DAT 255;DIR 0;"6935 DATA "CHA 2;DAT 0;DIR 255;ARM OFF;SLO NEG;"6940 DATA "CHA 3;DAT 255;DIR 0;ARM OFF;SLO NEG;"6945 DATA "CHA 4;DAT 0;DIR 255;ARM OFF;SLO NEG;"6950 DATA 36955 DATA "ARM",4,"ON","COND","SRQ","OFF"6960 DATA "DT",2,"SET","OFF"6965 DATA "SLO",2,"NEG","POS"6970 DATA 126975 DATA "CHA",4,1,-16980 DATA "DIR",0,255,16985 DATA "DAT",0,255,16990 DATA "CHA",2,2,-16995 DATA "DIR",0,255,17000 DATA "DAT",0,255,17005 DATA "CHA",3,3,-17010 DATA "DIR",0,255,17015 DATA "DAT",0,255,17020 DATA "CHA",4,4,-17025 DATA "DIR",0,255,17030 DATA "DAT",0,255,1