100 REM *** DEVICE ADDRESS ADDING PROGRAM -- 51/00-8032/0 ***110 INIT 120 DIM F$(20),N$(572),O$(216),V$(3),W$(2),Y$(74)130 F$="FFFFFFFFFFFFFFFFFFFF"140 F=0150 PRINT "
    *** ADD OUTPUT-DEVICE ADDRESSES (incl. selection) ***"160 PRINT "
	GRAPHICS TO PLOTTER"170 PRINT "	ALPHA-NUMERICS TO PRINTER"180 REM *** DEFINE PROCESSING PARAMETERS *******************************190 PRINT "

     SET ORIGINAL TAPE ON SAFE AND INSERT IT IN THE 4924"200 PRINT "     TYPE [DONE] AND PRESS [RETURN] WHEN READY :";210 INPUT Y$220 IF Y$<>"DONE" THEN 200230 PRINT "     WHAT IS THE GPIB-ADDRESS OF THE 4924 : ";240 INPUT D250 D=INT(D)260 IF D<0 OR D>30 THEN 230270 PRINT "
     SET NEW TAPE ON UNSAFE AND INSERT IT IN THE 4051"280 PRINT "     TYPE [DONE] AND PRESS [RETURN] WHEN READY :";290 INPUT Y$300 IF Y$<>"DONE" THEN 280310 PRINT "
     FIRST FILE OF ORIGINAL : ";320 INPUT N330 N=INT(N)340 IF N<1 OR N>255 THEN 310350 N0=N360 PRINT "     LAST FILE OF ORIGINAL  : ";370 INPUT E380 E=INT(E)390 IF E<N OR E>255 THEN 360400 PRINT "
     FILE #";N;" OF ORIGINAL TO BE COPIED TO"410 PRINT "     FILE #";"    OF NEW TAPE."420 PRINT "           ";430 INPUT N1440 N1=INT(N1)450 IF N1<1 OR N1>255 THEN 400460 PRINT "
     AUTOMATIC MARKING (YES/NO) : ";470 INPUT Z$480 GO TO (Z$="YES")+(Z$<>"NO") OF 460,510490 Z$="N"500 GO TO 520510 Z$="Y"520 PRINT "
     INTERACTION PRINT & LIST-STATEMENTS (YES/N0) :";530 F3=1540 INPUT A$550 GO TO (A$="YES")+(A$<>"NO") OF 520,570560 F3=0570 PRINT "
     ADDRESS OF OUTPUT-DEVICE FOR THIS PROGRAM : ";580 INPUT B9590 B9=INT(B9)600 IF B9<1 THEN 520610 PRINT @32,26:(B9<>32)*3620 PRINT USING "2(110(2(""""))),S":630 PAGE 640 REM *** START OF PROCESSING ****************************************650 PRINT @B9: USING 680:660 PRINT @B9:"  TRANSFER OF FILE : ";N;" TO FILE : ";N1670 PRINT @B9: USING 680:680 IMAGE  /72( "*" )/690 ON SRQ THEN 2010700 FIND @D:N710 INPUT @D,9:A$720 IF POS(A$,"L",1)=9 OR N>E THEN 1580730 GOSUB 3000740 GOSUB 5500750 S3=POS(F$,"F",1)760 IF S3=0 THEN 800770 PRINT @B9:" *** UDK # ";S3;" IN NEW PROGRAM WILL BE USED TO SELECT"780 PRINT @B9:" OUTPUT-DEVICE(S)."790 GO TO 830800 PRINT @B9:" *** NO FREE UDK AVAILABLE."810 PRINT @B9:" YOU CAN SELECT OUTPUT-DEVICE(S) BY USING :"820 PRINT @B9:" RUN ";S1+10;" FOLLOWED BY [CR]."830 IF NOT(POS(Z$,"Y",1)) THEN 870840 B$=SEG(A$,34,8)850 FIND N1-(N1=1)860 MARK 1,256*(VAL(B$)+(POS(A$,"B",1)<>9 AND POS(A$,"N",1)<>9)+3)870 IF POS(A$,"B",1)<>9 AND POS(A$,"N",1)<>9 THEN 900880 PRINT @B9:"";A$;" UNABLE TO COPY ! (NEW ";N1;")"890 GO TO 1510900 FIND N1910 F1=0920 F2=0930 REM *** ONE RECORD EACH TIME ***************************************940 INPUT @D:A$950 IF LEN(A$)=0 THEN 1480960 GO TO (F1=0 AND VAL(A$)=>4 AND POS(A$,"INIT",1)=0)+2*F1 OF 2510,1090970 PRINT @B9:"NEW FILE ";N1;" :"980 PRINT @B9:"  BEFORE RUNNING THE NEW PROGRAM ONE HAS TO DEFINE THE"990 PRINT @B9:"  THE OUTPUT-DEVICE-ADDRESSES."1000 PRINT @B9:"  THIS CAN BE DONE IN TWO WAYS:"1010 PRINT @B9:"  (1) TYPE RUN ";S1+100;" FOLLOWED BY [CR]"1020 PRINT @B9:"      ALL OUTPUT ON THE SCREEN (ADDRESS 32)."1030 PRINT @B9:"  (2) TYPE RUN ";S1+10;"FOLLOWED BY [CR]"1040 PRINT @B9:"      TO SELECT OUTPUT-DEVICES FOR GRAPHICS"1050 PRINT @B9:"      AND ALPHA-NUMERICAL OUTPUT."1060 IF S3=0 THEN 10901070 PRINT @B9:"  (3) USE UDK # ";S31080 PRINT @B9:"      TO DEFINE THE DEVICE-ADDRESSES."1090 F1=11100 B$=SEG(A$,POS(A$," ",1)+1,3)1110 IF B$="REM" OR B$="IMA" THEN 14601120 GOSUB 45001130 REM *** SEARCH FOR OUTPUT-STATEMENTS TO BE CHANGED *************** 1140 DAT "@32","PRINT","DRAW","MOVE","RDRAW","RMOVE","AXIS","LIST","GIN"1150 RESTORE 11401160 READ B$1170 IF POS(A$,B$,1)=0 THEN 13101180 B$=B$&","1190 IF POS(A$,B$,1)=0 THEN 12701200 M=VAL(A$)1210 PRINT @B9:"NEW FILE ";N1;": LINE ";M;" CONTAINS @32 WITH";1220 PRINT @B9:" SECONDARY ADDRESS."1230 PRINT @B9:"THE STATEMENTS IS :"1240 PRINT @B9:A$1250 PRINT @B9:"THIS IS NOT CHANGED IN THE NEW PROGRAM."1260 GO TO 14501270 T$="@"&G$1280 A$=REP(T$,POS(A$,B$,1),3)1290 GO TO 14501300 IF POS("@",A$,1) THEN 14501310 FOR I=1 TO 81320 READ B$1330 IF POS(A$,B$,1)=0 THEN 14401340 IF LEN(A$)<=68 THEN 14001350 M=VAL(A$)1360 PRINT @B9:"NEW FILE ";N1;": LINE ";M;" IS TOO LONG!"1370 GOSUB 70001380 IF F5=0 THEN 14301390 GO TO 13301400 GOSUB 50001410 REM *** UPDATE STATEMENT ***************************************** 1420 A$=REP(C$,POS(A$,B$,1),LEN(B$))1430 I=91440 NEXT I1450 PRINT @33:A$1460 IF F THEN 14801470 GO TO 9401480 IF N>N0 THEN 15101490 GOSUB 35001500 REM *** READY WITH FILE N & N1 PROCEED *************************** 1510 N=N+11520 IF N>E THEN 15801530 N1=N1+11540 CLOSE 1550 F=01560 GO TO 6301570 REM *** READY **************************************************** 1580 PRINT @B9:"END OF TRANSMISSION"1590 PRINT @32,26:01600 COPY 1610 END 2000 REM *** SRQ-HANDLING ********************************************* 2010 INPUT @D,30:A2020 IF A<>12 THEN 20602030 PRINT @B9:"EOF"2040 F=12050 RETURN 2060 PRINT "MAGNETIC TAPE-ERROR. CODE: ";A;". FILE ";N;" (NEW ";N1;")"2070 GO TO 15902500 REM *** ADDING OF STATEMENTS 1 & 2 ******************************* 2510 PRINT @33:"1 GOSUB ";S1+1002520 PRINT @33:"2 GOTO 100"2530 F2=12540 GO TO 10903000 REM *** FIND LAST STATEMENT # & FREE UDK ************************* 3010 REM *** & CHECK FOR APPEND/OLD/FIND`s & NUM.VAR.-NAMES **********3020 N2=03030 N$=""3040 S4=03050 S5=03060 S6=03070 FIND @D:N3080 IF TYP(0)=1 THEN 32103090 INPUT @D:Y$3100 IF LEN(Y$)=0 THEN 32103110 B$=Y$3120 GOSUB 40003130 GOSUB 75003140 S$=STR(VAL(Y$))3150 S$=SEG(S$,2,LEN(S$)-1)3160 IF POS(Y$,"REM",LEN(S$)+1)=LEN(S$)+2 THEN 30803170 S4=S4+POS(Y$,"APPEND",1)<>03180 S5=S5+POS(Y$,"OLD",1)<>03190 S6=S6+POS(Y$,"FIND",1)<>03200 GO TO 30803210 IF S4=0 THEN 32403220 S1=653903230 GO TO 32503240 S1=VAL(B$)3250 FIND @D:N3260 IF S4+S5+S6=0 THEN 33603270 PRINT @B9:" *** WARNING ***"3280 PRINT @B9:"     FILE # ";N;" CONTAINS :"3290 IF S4=0 THEN 33103300 PRINT @B9:"  ";S4;" APPEND`s "3310 IF S5=0 THEN 33303320 PRINT @B9:"  ";S5;" OLD`s "3330 IF S6=0 THEN 33603340 PRINT @B9:"  ";S6;" FIND`s "3350 PRINT @B9:" *** CHECK THE RESULT ***"3360 RETURN 3500 REM *** ADDRESS-ADD ROUTINE ************************************** 3510 PRINT @33:S1+10;" PRINT ""DEVICE ADDRESS FOR GRAPHICS  : "";"3520 PRINT @33:S1+20;" INPUT ";G$3530 PRINT @33:S1+30;" ";G$;"=INT(";G$;")"3540 PRI @33:S1+40;" IF";G$;"<1 OR ";G$;">30 AND ";G$;"<>32 THEN ";S1+103550 PRINT @33:S1+50;" PRINT ""DEVICE ADDRESS FOR ALPHA-NUM.: "";"3560 PRINT @33:S1+60;" INPUT ";P$3570 PRINT @33:S1+70;" ";P$;"=INT(";P$;")"3580 PRINT @33:S1+80;" IF ";P$;"<1 THEN ";S1+503590 PRINT @33:S1+90;" RETURN"3600 PRINT @33:S1+100;" ";G$;"=32"3610 PRINT @33:S1+110;" ";P$;"=32"3620 PRINT @33:S1+120;" RETURN"3630 RETURN 4000 REM *** FIND FREE USER DEFINABLE KEY ***************************** 4010 S2=VAL(B$)4020 IF S2>80 THEN 40704030 S3=S2-INT(S2/4)*44040 IF S3<>0 THEN 40704050 S2=S2/44060 F$=REP("O",S2,1)4070 RETURN 4500 REM *** UDK-ADD ROUTINE ****************************************** 4510 IF S3=0 THEN 45804520 IF VAL(A$)<=S3*4 THEN 45804530 S2=S3*44540 PRINT @33:S2;" REM *** SELECT OUTPUT ***"4550 PRINT @33:S2+1;" GOSUB ";S1+104560 PRINT @33:S2+2;" END"4570 S3=04580 RETURN 5000 REM *** DEFINE OUTPUT-DEVICE ************************************* 5010 C$=SEG(B$,1,3)5020 IF B$<>"PRINT" AND B$<>"LIST" THEN 50805030 IF F3 THEN 51105040 T$="@"&P$5050 T$=T$&":"5060 C$=C$&T$5070 GO TO 51005080 T$="@"&G$5090 GO TO 50505100 RETURN 5110 PRINT "  ** STATEMENT # ";VAL(A$)5120 GOSUB 65405130 PRINT O$5140 PRINT "  WHICH DEVICE (Graphics/Alpha-num./Screen) ? ";5150 INPUT Y$5160 IF Y$="S" THEN 52305170 GO TO (Y$="G")+(Y$<>"A") OF 5140,52005180 T$="@"&P$5190 GO TO 52105200 T$="@"&G$5210 T$=T$&":"5220 C$=C$&T$5230 RETURN 5500 REM *** DEFINE VARIABLES FOR OUTPUT-DEVICES ********************** 5510 G$="Q9"5520 Y$="GRAPHIC-OUTPUT"5530 PRINT USING 5540:Y$5540 IMAGE/"WHICH VARIABLE DO YOU WANT TO USE AS ADDRESS FOR "14A5550 IF POS(N$,G$,1)=0 THEN 55905560 GOSUB 80005570 PRINT "	YOUR VARIABLE : ";5580 GO TO 56005590 PRINT "DEFAULT : ";G$;"	YOUR VARIABLE : ";5600 INPUT Y$5610 IF LEN(Y$)<>0 THEN 56305620 Y$=G$5630 GOSUB 60005640 IF Y$="FALSE" THEN 55105650 G$=Y$5660 P$="Z9"5670 Y$="PRINTER-OUTPUT"5680 PRINT USING 5540:Y$5690 IF POS(N$,P$,1)=0 THEN 57305700 GOSUB 80005710 PRINT "	YOUR VARIABLE : ";5720 GO TO 57405730 PRINT "DEFAULT : ";P$;"	YOUR VARIABLE : ";5740 INPUT Y$5750 IF LEN(Y$)<>0 THEN 57705760 Y$=P$5770 GOSUB 60005780 IF Y$="FALSE" THEN 56605790 P$=Y$5800 RETURN 6000 REM *** CHECK NEW VARIABLE *************************************** 6010 IF LEN(Y$)>2 THEN 60906020 X$=SEG(Y$,1,1)6030 IF POS("ABCDEFGHIJKLMNOPQRSTUVWXYZ",X$,1)=0 THEN 60906040 IF LEN(Y$)<2 THEN 60706050 X$=SEG(Y$,2,1)6060 IF POS("0123456789",X$,1)=0 THEN 60906070 IF POS(N$,Y$,1)=0 THEN 61106080 PRINT "	*** VARIABLE ALREADY USED BY THE PROGRAM ***"6090 Y$="FALSE"6100 PRINT "	*** ERROR ***  PLEASE RESPECIFY "6110 RETURN 6500 REM *** PREPARE STATEMENT STRING TO BE DISPLAYED ***************** 6510 REM *** REPLACE CONTROL CHARS. BY UNDERLINED CHARS. ************** 6520 REM A$=INPUT STRING    O$=OUTPUT STRING (216)6530 REM V$=SCRATCH (2)     W$=SCRATCH (1)6540 O$=""6550 FOR J=1 TO LEN(A$)6560 V$=SEG(A$,J,1)6570 I=ASC(V$)6580 IF I>31 THEN 66106590 W$=CHR(I+64)6600 V$=W$&"_"6610 O$=O$&V$6620 NEXT J6630 RETURN 7000 REM *** TOO LONG STATEMENT *************************************** 7010 F5=07020 GOSUB 65007030 PRINT @B9:" THE STATEMENT IS :"7040 PRINT @B9:O$7050 PRINT "DO YOU WANT TO CHANGE THE STATEMENT (YES/N0) ";7060 INPUT Y$7070 GO TO (Y$="YES")+(Y$<>"NO") OF 7050,70907080 RETURN 7090 S$=A$7100 PRINT "PLEASE INPUT THE NEW STATEMENT ......."7110 INPUT A$7120 PRINT @B9:"THE NEW LINE IS : "7130 GOSUB 65007140 PRINT @B9:O$7150 Y$=STR(M)7160 Y$=SEG(Y$,2,LEN(Y$)-1)7170 IF POS(A$,Y$,1)=1 THEN 72007180 PRINT "	*** ERROR *** LINE-NUMBER INCORRECT."7190 GO TO 71007200 PRINT "

 SATISFIED (YES/NO) ";7210 INPUT Y$7220 GO TO (Y$="YES")+(Y$<>"NO") OF 7200,72807230 PRINT "
ANOTHER TRY (YES/NO) ";7240 INPUT Y$7250 GO TO (Y$="YES")+(Y$<>"NO") OF 7230,71007260 A$=S$7270 RETURN 7280 F5=17290 GO TO 72707500 REM *** FETCH NUMERICAL VARIABLE NAMES FROM INPUT LINE **********7510 Y$=Y$&"  "7520 REM CHECK FOR REM- AND IMA- STATEMENTS7530 I=POS(Y$," ",1)7540 O$=SEG(Y$,I+1,3)7550 O$=SEG(Y$,POS(Y$," ",1)+1,3)7560 IF O$="REM" OR O$="IMA" THEN 79807570 N5=07580 FOR I=2 TO LEN(Y$)7590 O$=SEG(Y$,I,1)7600 N3=ASC(O$)7610 REM IGNORE CHARACTERS BETWEEN " `s7620 IF N5=0 THEN 76607630 IF N3<>34 THEN 79707640 N5=07650 GO TO 79707660 IF N3<>34 THEN 76907670 N5=17680 GO TO 79707690 IF N3<65 OR N3>90 THEN 79707700 REM CHECK PREVIOUS CHAR.7710 X$=SEG(Y$,I-1,1)7720 N4=ASC(X$)7730 IF N4>64 AND N4<91 OR (N4>96 AND N4<123) THEN 79707740 IF N4>47 AND N4<58 THEN 79707750 REM CHECK NEXT CHAR.7760 X$=SEG(Y$,I+1,1)7770 N4=ASC(X$)7780 IF N4>64 AND N4<91 OR (N4>96 AND N4<123) THEN 79707790 REM ONE OR TWO CHAR.NAME7800 IF N4=32 OR N4=36 OR (N4>47 AND N4<58) THEN 78207810 X$=" "7820 O$=O$&X$7830 IF X$="$" THEN 79707840 REM SAVE NUMERIC VARIABLE NAMES7850 IF N2=0 THEN 79307860 FOR J=1 TO N27870 X$=SEG(N$,J*2-1,2)7880 IF O$=X$ THEN 79707890 IF X$<O$ THEN 79207900 N$=REP(O$,J*2-1,0)7910 GO TO 79407920 NEXT J7930 N$=N$&O$7940 N2=N2+17950 GO TO 79707960 REM FORGET STRING VARIABLE NAMES7970 NEXT I7980 RETURN 8000 REM *** DISPLAY NUM.VAR.NAMES ***********************************8010 IF N2=0 THEN 80708020 PRINT "	USED NAMES FOR NUMERICAL VARIABLES :"8030 FOR I=1 TO N28040 X$=SEG(N$,I*2-1,2)8050 PRINT X$;"          ";8060 NEXT I8070 PRINT "
"8080 RETURN 