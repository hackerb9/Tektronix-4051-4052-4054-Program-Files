5000 REM ***** SECOND PASS - CONVERT FORTRAN STATEMENTS TO BASIC5010 REM SET THE INDEX INTO T$ TO THE START5020 I0=15030 REM THE BASIC PROGRAM WILL BE STORED ON THE 4924 (FILE 2)5040 FIND @4:25050 REM FIND THE OUTPUT FROM THE FIRST PASS ON THE INTERNAL TAPE5060 FIND 25070 PRINT "SECOND PASS ---- BASIC!!"5080 ON EOF (0) THEN 58405090 INPUT @33:C$5100 IF LEN(C$)=0 THEN 50905110 REM CHECK FOR A NEW SUBROUTINE OR FUNCTION5120 N=VAL(C$)5130 IF N<>L(I0) THEN 52105140 REM IT IS A NEW SUBROUTINE OR FUNCTION INCREMENT THE INDEX5150 I0=I0+15160 REM SEE IF IT IS A REMARK STATEMENT (ALREADY CONVERTED)5170 R$=SEG(C$,7,4)5180 IF R$="REM " THEN 55305190 REM SEE WHAT TYPE OF STATEMENT IT IS5200 REM START AT COLUMN AND GET THE FIRST ALPHA CHARACTER5210 P0=75220 IF P0>LEN(C$) THEN 56705230 S$=SEG(C$,P0,1)5240 IF S$=>"A" AND S$<="Z" THEN 52705250 P0=P0+15260 GO TO 52205270 REM GET THE NEXT CHARACTER5280 P1=P0+15290 IF P1>LEN(C$) THEN 53605300 R$=SEG(C$,P1,1)5310 REM SEE IF IT IS A SPECIAL CHARACTER5320 IF POS(" +-/*=.,()$'",R$,1)<>0 THEN 53705330 S$=S$&R$5340 P1=P1+15350 GO TO 52905360 REM CHECK THE FIRST FIVE CHARACTERS FOR A FORTRAN KEYWORD5370 R$=SEG(S$,1,5)5380 REM PAD TO 6 CHARACTERS5390 U$="      "5400 U$=REP(R$,1,LEN(R$))5410 P4=POS(K$,U$,1)5420 IF P4=0 THEN 55305430 P4=INT(P4/6)+15440 REM         READ WRITE FRMT IF  GOTO  GO  DO  DIM  CALL  END5450 GOSUB P4 OF 5890,5980,6360,8150,9040,9040,9790,10290,10360,109405460 REM CHECK FOR A NEW STATEMENT (CREATED BY A SUBROUTINE)5470 IF F0<>1 THEN 55005480 F0=05490 GO TO 52105500 REM CHANGE THE OTHER FORTRAN STATEMENTS TO REMARKS (*)5510 IF P4<13 OR P4=0 THEN 55305520 C$=REP("REM (*) ",7,0)5530 GOSUB 110005540 PRINT C$5550 PRINT @4:C$5560 REM CHECK FOR A MATCH ON A FOR-NEXT LOOP5570 REM GET THE BASIC LINE NUMBER5580 N=VAL(C$)5590 N$=STR(INT(N/10)*10)5600 N$=REP("",1,1)5610 REM SEE IF IT IS IN B$ (IF NOT GET THE NEXT CARD)5620 U$="      "5630 U$=REP(N$,1,LEN(N$))5640 P0=POS(B$,U$,1)5650 IF P0=0 THEN 50905660 REM IT IS IN B$ - GET THE BASIC VARIABLE5670 R$=SEG(D$,(P0-1)/6*3+1,3)5680 REM AND DELETE THE TWO ENTRIES5690 B$=REP("",P0,6)5700 D$=REP("",(P0-1)/6*3+1,3)5710 REM NOW MAKE UP THE NEXT STATEMENT5720 N=N+15730 S$=STR(N)5740 S$=REP("",1,1)5750 C$="      "5760 C$=REP(S$,6-LEN(N$),LEN(S$))5770 C$=C$&"NEXT "5780 C$=C$&R$5790 GOSUB 110005800 PRINT C$5810 PRINT @4:C$5820 REM CHECK FOR MORE ENTRIES5830 GO TO 56405840 REM CLOSE THE FILES5850 CLOSE 5860 PRINT @4,2:5870 REM NOW PRINT THE FORTRAN/BASIC TABLES5880 GO TO 112705890 REM ***** READ STATEMENT DECODE5900 REM REPLACE 'READ' WITH 'INPUT'5910 P0=POS(C$,"READ",7)5920 C$=REP("INPUT",P0,4)5930 REM FIND THE '(u,s)' AND DELETE IT5940 P0=POS(C$,"(",7)5950 P1=POS(C$,")",P0)5960 C$=REP("",P0,P1-P0+1)5970 RETURN 5980 REM WRITE STATEMENT DECODE ROUTINE5990 REM 'WRITE(u,s) list' WILL BE CONVERTED TO 'PRINT USING s:list'6000 REM REPLACE 'WRITE' WITH 'PRINT'6010 P0=POS(C$,"WRITE",7)6020 C$=REP("PRINT",P0,5)6030 P0=P0+56040 P1=P0-16050 P1=P1+16060 S$=SEG(C$,P1,1)6070 IF S$=" " THEN 60506080 REM SEE IF THIS NONBLANK CHARACTER IS A '(' IF NOT RETURN6090 IF S$<>"(" THEN 63506100 REM FIND THE NEXT NONBLANK AND NON-NUMERIC6110 P1=P1+16120 S$=SEG(C$,P1,1)6130 IF S$=" " OR (S$=>"0" AND S$<="9") THEN 61106140 REM CHECK FOR A ')' (UNFORMATTED STATEMENT)6150 IF S$=")" THEN 63206160 REM CHECK THE NEXT NON-BLANK FOR A NUMBER6170 P1=P1+16180 S$=SEG(C$,P1,1)6190 IF S$=" " THEN 61706200 REM IF IT IS NOT A NUMBER (UNFORMATTED)6210 IF S$<"0" OR S$>"9" THEN 63206220 REM 'WRITE(u,s) list' WILL BE CONVERTED TO 'PRINT USI s:list'6230 C$=REP(" USI ",P0,P1-P0)6240 REM SET THE POINTER TO THE START OF THE FORTRAN STATEMENT NUMBER6250 T0=P0+56260 REM CONVERT THE FORTRAN STATEMENT NUMBER INTO BASIC6270 GOSUB 94806280 REM FIND THE NEXT ')' AND REPLACE IT WITH A ':'6290 P0=POS(C$,")",P0)6300 C$=REP(":",T0,P0-T0+1)6310 GO TO 63506320 REM DELETE '(....)'6330 P1=POS(C$,")",P0)6340 C$=REP("",P0,P1-P0+1)6350 RETURN 6360 REM ***** FORMAT DECODE ROUTINE6370 REM CONVERT 'FORMAT' TO 'IMAGE'6380 P0=POS(C$,"FORMAT",1)6390 IF P0=0 THEN 81406400 C$=REP("IMAGE",P0,6)6410 REM FIND THE FIRST '(' AND SUBSTITUTE A BLANK6420 P0=POS(C$,"(",1)6430 C$=REP(" ",P0,1)6440 REM R$ IS THE REPEAT FACTOR IF PRESENT6450 R$=""6460 REM GET THE NEXT CHARACTER6470 P0=P0+16480 IF P0>LEN(C$) THEN 80606490 Q$=SEG(C$,P0,1)6500 REM CHECK FOR A NUMBER6510 IF Q$<"0" OR Q$>"9" THEN 65406520 R$=R$&Q$6530 GO TO 64706540 REM CHECK FOR A FORMAT CODE6550 P1=POS("IFATH'E",Q$,1)6560 GOSUB P1 OF 6590,6810,7230,7450,7580,7690,78206570 REM GET THE NEXT CODE6580 GO TO 64506590 REM *** INTEGER CODE SUBROUTINE6600 REM THE CODE rIl WILL BE CONVERTED TO r(lD)6610 REM DELETE THE 'I' A 'D' WILL BE INSERTED LATER6620 C$=REP("",P0,1)6630 REM SEE IF A REPEAT NUMBER IS PRESENT6640 IF R$="" THEN 66906650 REM INSERT A '(' AFTER THE REPEAT NUMBER6660 C$=REP("(",P0,0)6670 P0=P0+16680 REM GET THE NEXT NON-NUMERIC CHARACTER6690 Q$=SEG(C$,P0,1)6700 IF Q$<"0" OR Q$>"9" THEN 67306710 P0=P0+16720 GO TO 66906730 REM NOW INSERT A 'D'6740 C$=REP("D",P0,0)6750 P0=P0+16760 REM AND INSERT A ')' IF A REPEAT NUMBER IS PRESENT6770 IF R$="" THEN 68006780 C$=REP(")",P0,0)6790 P0=P0+16800 RETURN 6810 REM *** FLOATING POINT CODE SUBROUTINE6820 REM THE CODE rFl.d WILL BE CONVERTED TO r(l-dD.dD)6830 REM DELETE THE 'F' A 'D' WILL BE INSERTED LATER6840 C$=REP("",P0,1)6850 REM SEE IF A REPEAT NUMBER IS PRESENT6860 IF R$="" THEN 69106870 REM INSERT A '(' AFTER THE REPEAT NUMBER6880 C$=REP("(",P0,0)6890 P0=P0+16900 REM GET THE l AND d VALUES6910 P1=P06920 N$=""6930 REM GET THE NEXT CHARACTER6940 Q$=SEG(C$,P1,1)6950 REM CHECK FOR A PERIOD6960 IF Q$<>"." THEN 70006970 L0=VAL(N$)6980 P1=P1+16990 GO TO 69207000 IF Q$<"0" OR Q$>"9" THEN 70407010 N$=N$&Q$7020 P1=P1+17030 GO TO 69407040 D0=VAL(N$)7050 REM CALCULATE THE BASIC NUMBERS7060 N$=""7070 IF D0=0 THEN 71207080 L0=L0-D0-17090 N$=STR(D0)7100 N$=REP(".",1,1)7110 N$=N$&"D"7120 Q$=STR(L0)7130 Q$=REP("",1,1)7140 Q$=Q$&"D"7150 N$=REP(Q$,1,0)7160 C$=REP(N$,P0,P1-P0)7170 P0=P0+LEN(N$)7180 REM INSERT A ')' IF A REPEAT NUMBER IS PRESENT7190 IF R$="" THEN 72207200 C$=REP(")",P0,0)7210 P0=P0+17220 RETURN 7230 REM *** ALPHANUMERIC CODE SUBROUTINE7240 REM THE CODE rAl WILL BE CONVERTED TO r(lA)7250 REM DELETE THE 'A' ONE WILL BE INSERTED LATER7260 C$=REP("",P0,1)7270 REM SEE IF A REPEAT NUMBER IS PRESENT7280 IF R$="" THEN 73307290 REM INSERT A '(' AFTER THE REPEAT NUMBER7300 C$=REP("(",P0,0)7310 P0=P0+17320 REM GET THE NEXT NON-NUMERIC CHARACTER7330 Q$=SEG(C$,P0,1)7340 IF Q$<"0" OR Q$>"9" THEN 73707350 P0=P0+17360 GO TO 73307370 REM NOW INSERT AN 'A'7380 C$=REP("A",P0,0)7390 P0=P0+17400 REM AND INSERT A ')' IF A REPEAT NUMBER IS PRESENT7410 IF R$="" THEN 74407420 C$=REP(")",P0,0)7430 P0=P0+17440 RETURN 7450 REM *** TAB SUBROUTINE7460 REM THE CODE nT WILL BE CONVERTED TO nT7470 REM DELETE THE 'T' IT WILL BE INSERTED LATER7480 C$=REP("",P0,1)7490 REM GET THE NEXT NON-BLANK CHARACTER7500 Q$=SEG(C$,P0,1)7510 IF Q$<"0" OR Q$>"9" THEN 75507520 P0=P0+17530 GO TO 75007540 REM NOW INSERT THE 'T'7550 C$=REP("T",P0,0)7560 RETURN 7570 RETURN 7580 REM *** HOLLERITH CODE SUBROUTINE7590 REM THE CODE lHm WILL BE CONVERTED TO "m"7600 REM REPLACE THE H WITH A "7610 C$=REP("""",P0,1)7620 REM INSERT THE NEXT "7630 C$=REP("""",P0+VAL(R$)+1,0)7640 REM DELETE THE r VALUE7650 C$=REP("",P0-LEN(R$),LEN(R$))7660 REM RESET THE POINTER7670 P0=P0+VAL(R$)-LEN(R$)+17680 RETURN 7690 REM *** LITERAL DATA SUBROUTINE7700 REM CHANGE THE ' TO A "7710 C$=REP("""",P0,1)7720 REM RESET THE POINTER TO THE END OF THE LITERAL7730 P0=POS(C$,"'",P0+1)7740 REM CHECK FOR TWO QUOTES7750 R$=SEG(C$,P0+1,1)7760 IF R$<>"'" THEN 77907770 P0=P0+17780 GO TO 77307790 REM CHANGE THE ' TO A "7800 C$=REP("""",P0,1)7810 RETURN 7820 REM *** EXPONENT CODE SUBROUTINE7830 REM THE CODE rEl.d WILL BE CONVERTED TO r(dE)7840 REM SEE IF A REPEAT NUMBER IS PRESENT7850 IF R$="" THEN 79007860 REM INSERT A '(' AFTER THE REPEAT NUMBER7870 C$=REP("(",P0,0)7880 P0=P0+17890 REM DELETE THE 'El.' CODE AN 'E' WILL BE INSERTED LATER7900 REM FIND THE DECIMAL POINT7910 P1=POS(C$,".",P0)7920 C$=REP("",P0,P1-P0+1)7930 REM FIND THE NEXT NON-NUMERIC CHARACTER7940 Q$=SEG(C$,P0,1)7950 IF Q$<"0" OR Q$>"9" THEN 79907960 P0=P0+17970 GO TO 79407980 REM NOW INSERT AN 'E'7990 C$=REP("E",P0,0)8000 P0=P0+18010 REM AND INSERT A ')' IF A REPEAT NUMBER IS PRESENT8020 IF R$="" THEN 80508030 C$=REP(")",P0,0)8040 P0=P0+18050 RETURN 8060 REM *** LAST PARENTHESIS SECTION8070 REM FIND THE LAST PARENTHESIS AND DELETE IT8080 P0=78090 P1=POS(C$,")",P0+1)8100 IF P1=0 THEN 81308110 P0=P18120 GO TO 80908130 C$=REP("",P0,1)8140 RETURN 8150 REM ***** IF DECODE ROUTINE8160 REM CHECK FOR AN ARITHMETIC IF  ie. IF (exp) num,num,num8170 REM FIND THE LAST PARENTHESIS8180 P0=78190 P1=POS(C$,")",P0+1)8200 IF P1=0 THEN 82408210 P0=P18220 GO TO 81908230 REM NOW CHECK FOR THE NEXT NONBLANK CHARACTER8240 P1=P08250 P1=P1+18260 IF P1>LEN(C$) THEN 84308270 R$=SEG(C$,P1,1)8280 IF R$=" " THEN 82508290 REM GOT THE NEXT NONBLANK SEE IF IT IS A NUMBER8300 IF R$<"0" OR R$>"9" THEN 84308310 REM IT IS AN ARITHMETIC IF8320 REM SET THE POINTER TO THE FORTRAN STATEMENT NUMBER8330 T0=P18340 REM S$ CONTAINS THE FORTRAN STATEMENT NUMBER CONVERT TO BASIC8350 GOSUB 94808360 IF T0<LEN(C$) THEN 83508370 REM STICK IN '+2 OF ' AFTER THE LAST PARENTHESIS8380 C$=REP("+2 OF ",P0+1,0)8390 REM CHANGE 'IF' TO 'GOTO SGN'8400 P1=POS(C$,"IF",7)8410 C$=REP("GO TO SGN",P1,2)8420 RETURN 8430 REM *** LOGICAL IF ie. IF (logical) statement8440 REM CHECK FOR A LOGICAL GO TO8450 P3=POS(C$,"GOTO ",7)+POS(C$,"GO ",7)8460 REM IF IT IS A LOGICAL GOTO DO NOT INSERT 'NOT'8470 IF P3<>0 THEN 85408480 REM FIND THE FIRST PARENTHESIS8490 P0=POS(C$,"(",7)8500 REM STICK IN 'NOT'8510 C$=REP(" NOT",P0,0)8520 REM INSERT 'THEN line number'8530 REM CHECK FOR A LOGICAL GOTO8540 IF P3=0 THEN 86208550 P0=POS(C$,"TO ",P3)+18560 C$=REP("THEN",P3,P0-P3+1)8570 REM SET THE POINTER TO THE FORTRAN STATEMENT NUMBER8580 T0=P3+18590 REM CONVERT THE FORTRAN STATEMENT NUMBER TO A BASIC LINE NUMBER8600 GOSUB 94808610 RETURN 8620 REM GET THE PRESENT LINE NUMBER (BASIC)8630 R=VAL(C$)8640 REM CALCULATE THE NEXT LINE NUMBER8650 R$=STR(R+10)8660 R$=REP("THEN",1,0)8670 REM FIND THE LAST PARENTHESIS OF THE LOGICAL COMPARISON8680 REM N0 IS THE COUNT OF '('8690 REM N1 IS THE COUNT OF ')'8700 N1=08710 REM FIND THE FIRST '('8720 P0=POS(C$,"(",7)8730 N0=18740 P0=P0+18750 Q$=SEG(C$,P0,1)8760 N0=N0+(Q$="(")8770 N1=N1+(Q$=")")8780 IF N0=N1 THEN 88008790 GO TO 87408800 REM P0 IS THE POINTER TO THE LAST PARENTHESIS8810 REM INSERT 'THEN line number'8820 C$=REP(R$,P0+1,0)8830 REM SAVE THE REST OF C$ FOR THE NEXT LINE8840 S$=SEG(C$,P0+LEN(R$)+1,LEN(C$)-(P0+LEN(R$)))8850 REM WRITE OUT THIS BASIC LINE8860 C$=SEG(C$,1,P0+LEN(R$))8870 GOSUB 110408880 PRINT C$8890 PRINT @4:C$8900 REM GET THE REST OF THE OLD C$ FOR THE NEXT LINE8910 C$=S$8920 REM ADD A NEW LINE NUMBER8930 R$=STR(R+1)8940 R$=REP("",1,1)8950 REM PAD TO 6 CHARACTERS8960 U$="      "8970 U$=REP(R$,6-LEN(R$),LEN(R$))8980 REM APPEND C$ TO THE NEW LINE NUMBER8990 C$=U$&C$9000 REM AND PROCESS IT AS A NEW CARD9010 REM SET THE FLAG F09020 F0=19030 RETURN 9040 REM ***** GOTO DECODE ROUTINE9050 REM CHECK IF A COMPUTED GOTO9060 P0=POS(C$,"(",7)9070 P1=POS(C$,")",P0)9080 IF P0=0 AND P1=0 THEN 94309090 REM REMEMBER THE POSITION OF THE FIRST PARENTHESIS9100 P2=P09110 REM IT IS A COMPUTED GOTO GET THE STATEMENT NUMBERS9120 REM SEARCH FOR THE NEXT COMMA9130 P3=POS(C$,",",P0+1)9140 REM CHECK FOR LAST COMMA9150 IF P3<P1 THEN 91809160 P3=P19170 REM SET THE POINTER TO THE FORTRAN STATEMENT NUMBER9180 T0=P0+19190 REM CONVERT THE FORTRAN TO A BASIC LINE NUMBER9200 GOSUB 94809210 P0=POS(C$,",",P0+1)9220 P1=POS(C$,")",P0)9230 IF P0>P1 THEN 92509240 GO TO 91309250 REM GET THE REMAINING PORTION OF THE STRING9260 S$=SEG(C$,P0,LEN(C$))9270 REM DELETE THE COMMA9280 S$=REP(" ",1,1)9290 C$=REP("",P0,LEN(S$))9300 REM AND APPEND ' OF ' TO IT9310 S$=S$&" OF "9320 REM NOW INSERT THE VARIABLE INTO THE STRING9330 C$=REP(S$,P2,1)9340 REM FIND AND DELETE THE LAST PARENTHESIS9350 P0=79360 P1=POS(C$,")",P0+1)9370 IF P1=0 THEN 94009380 P0=P19390 GO TO 93609400 C$=REP("",P0,1)9410 GO TO 94709420 REM *** UNCONDITIONAL GOTO9430 REM SET THE POINTER TO THE FORTRAN STATEMENT NUMBER9440 T0=79450 REM CONVERT THE FORTRAN TO A BASIC LINE NUMBER9460 GOSUB 94809470 RETURN 9480 REM *** STATEMENT NUMBER TO LINE NUMBER ROUTINE9490 REM T0 IS A TEMPORARY POINTER INTO C$ (POSITION OF S$)9500 REM FIND THE FIRST DIGIT9510 T1=T09520 S$=SEG(C$,T1,1)9530 IF S$=>"0" AND S$<="9" THEN 95609540 T1=T1+19550 GO TO 95209560 REM GOT THE FIRST DIGIT, SET THE REST9570 T0=T19580 T1=T1+19590 R$=SEG(C$,T1,1)9600 IF R$<"0" OR R$>"9" THEN 96309610 S$=S$&R$9620 GO TO 95809630 REM PAD S$ TO 6 CHARACTERS9640 U$="      "9650 U$=REP(S$,1,LEN(S$))9660 REM FIND THE BASIC LINE NUMBER9670 REM CHECK IF IT IS IN THE TABLE9680 IF POS(T$,U$,P(I0))<>0 THEN 97209690 REM NOT IN THE TABLE SET TO LARGEST LINE NUMBER  (UNDEFINED)9700 R$="65535"9710 GO TO 97609720 B0=INT((POS(T$,U$,P(I0))-1)/6)+19730 R$=STR(T(B0))9740 R$=REP("",1,1)9750 REM REPLACE THE FORTRAN NUMBER (S$) WITH THE BASIC NUMBER (R$)9760 C$=REP(R$,T0,LEN(S$))9770 T0=T0+LEN(R$)9780 RETURN 9790 REM ***** DO STATEMENT SECTION9800 REM 'DO n i=m1,m2,m3' WILL BE CONVERTED TO 'FOR i=m1 TO m2 STEP m3'9810 REM THE STATEMENT NUMBER 'n' WILL BE CONVERTED TO BASIC AND SAVED9820 REM FIND THE POSITION OF 'DO'9830 P0=POS(C$,"DO",7)9840 REM REPLACE WITH 'FOR'9850 C$=REP("FOR",P0,2)9860 P0=P0+39870 REM SET THE POINTER TO THE FORTRAN STATEMENT NUMBER9880 T0=P09890 REM CONVERT IT TO BASIC9900 GOSUB 94809910 REM R$ NOW CONTAINS THE BASIC LINE NUMBER9920 REM DELETE THE NUMBER FROM C$9930 P0=T0-LEN(R$)9940 C$=REP("",P0,LEN(R$))9950 REM SAVE THE BASIC LINE NUMBER (FOR THE 'NEXT' STATEMENT - LATER9960 REM PAD TO 6 CHARACTERS9970 Q$="      "9980 Q$=REP(R$,1,LEN(R$))9990 B$=Q$&B$10000 REM GET THE BASIC VARIABLE USED10010 REM FIND THE FIRST ALPHA10020 R$=SEG(C$,P0,1)10030 IF R$=>"A" AND R$<="Z" THEN 1007010040 P0=P0+110050 GO TO 1002010060 REM SEE IF THERE IS A NUMBER WITH THE LETTER10070 P0=P0+110080 IF P0>LEN(C$) THEN 1013010090 Q$=SEG(C$,P0,1)10100 IF Q$<"0" OR Q$>"9" THEN 1013010110 R$=R$&Q$10120 GO TO 1007010130 REM AND SAVE IT FOR THE 'NEXT' STATEMENT - LATER10140 Q$="   "10150 Q$=REP(R$,1,LEN(R$))10160 D$=Q$&D$10170 REM FIND THE '='10180 P0=POS(C$,"=",7)10190 REM FIND THE FIRST ','10200 P0=POS(C$,",",P0+1)10210 REM DELETE THE COMMA AND INSERT A ' TO '10220 C$=REP(" TO ",P0,1)10230 REM CHECK FOR ANOTHER ',' (STEP VARIABLE)10240 P0=POS(C$,",",P0)10250 IF P0=0 THEN 1028010260 REM REPLACE THIS COMMA WITH ' STEP '10270 C$=REP(" STEP ",P0,1)10280 RETURN 10290 REM ***** DIMENSION SECTION10300 REM 'DIMENSION' will be converted to 'DIM'10310 REM FIND THE POSITION OF 'DIMENSION'10320 P0=POS(C$,"DIMENSION",7)10330 IF P0=0 THEN 1035010340 C$=REP("DIM",P0,9)10350 RETURN 10360 REM ***** CALL SECTION10370 REM "CALL" will be converted to a 'REM' and a 'GOSUB'10380 REM MAKE THE CALL A REMARK AND PRINT IT10390 C$=REP(" REM",6,0)10400 PRINT C$10410 PRINT @4:C$10420 REM GET THE BASIC LINE NUMBER AND INCREMENT BY 110430 N=VAL(C$)+110440 N$=STR(N)10450 N$=REP("",1,1)10460 REM PAD TO 6 CHARACTERS10470 Q$="      "10480 Q$=REP(N$,6-LEN(N$),LEN(N$))10490 REM APPEND 'GOSUB'10500 Q$=REP(" GOSUB",6,0)10510 N$=Q$10520 REM NOW GET THE SUBROUTINE NAME10530 P0=POS(C$,"CALL",7)+410540 S$=SEG(C$,P0,1)10550 IF S$=>"A" AND S$<="Z" THEN 1058010560 P0=P0+110570 GO TO 1054010580 REM GOT THE FIRST ALPHA NOW GET THE REST10590 P1=P0+110600 IF P1>LEN(C$) THEN 1067010610 R$=SEG(C$,P1,1)10620 REM SEE IT IT IS A SPECIAL CHARACTER10630 IF POS(" +-/*=.,()$'",R$,1)<>0 THEN 1067010640 S$=S$&R$10650 P1=P1+110660 GO TO 1060010670 REM GOT THE SUBROUTINE NAME SEE IF IT IS IN F$10680 REM PAD TO 7 CHARACTERS10690 U$="       "10700 U$=REP(S$,1,LEN(S$))10710 P2=POS(F$,U$,1)10720 IF P2=0 THEN 1078010730 REM IT IS IN THE TABLE GET THE BASIC LINE NUMBER10740 N=L((P2-1)/7+1)10750 REM APPEND LINE NUMBER AND RETURN10760 GO TO 1087010770 REM IT IS NOT IN THE TABLE10780 REM ASSIGN A LINE NUMBER AND DECREMENT U BY 10010790 N=U10800 REM PUT THE NAME IN F$10810 REM PAD TO 7 CHARACTERS10820 R$="       "10830 R$=REP(S$,1,LEN(S$))10840 F$=F$&R$10850 L(LEN(F$)/7)=U10860 U=U-10010870 R$=STR(N)10880 N$=REP(R$,LEN(N$),0)10890 REM SET P2 TO 0 TO BYPASS REM (*) PROCESSING10900 P2=010910 REM SET TO C$ AND RETURN10920 C$=N$10930 RETURN 10940 REM ***** END ROUTINE10950 REM END WILL BE CONVERTED TO A REMARK IF THE SUBROUTINE FLAG IS 110960 IF S0=0 THEN 1098010970 C$=REP("REM ",7,0)10980 S0=110990 RETURN 11000 REM **** SECTION TO REMOVE BLANKS IF NECESSARY11010 IF LEN(C$)<72 THEN 1125011020 REM CHECK FOR A REMARK STATEMENT - SKIP IT11030 R$=SEG(C$,7,3)11040 IF R$="REM" THEN 1125011050 REM REMOVE THE BLANKS IF NOT IN QUOTES11060 P0=011070 P0=P0+111080 IF P0>LEN(C$) THEN 1125011090 R$=SEG(C$,P0,1)11100 GO TO POS("""' ",R$,1) OF 11120,11170,1122011110 GO TO 1107011120 REM GET THE NEXT "11130 P1=POS(C$,"""",P0+1)11140 IF P1=0 THEN 1107011150 P0=P1+111160 GO TO 1107011170 REM GET THE NEXT '11180 P1=POS(C$,"'",P0+1)11190 IF P1=0 THEN 1107011200 P0=P1+111210 GO TO 1107011220 REM DELETE THE BLANK11230 C$=REP("",P0,1)11240 GO TO 1108011250 RETURN 11260 REM ***** POST ANALYSIS SECTION11270 REM ***** FORTRAN STATEMENT NUMBERS TO BASIC LINE NUMBERS11280 REM D IS THE DEVICE NUMBER FOR OUTPUT, DEFAULT IS SCREEN (32)11290 D=3211300 PRINT "


PRESS RETURN TO CONTINUE";11310 INPUT R$11320 IF LEN(T$)=0 THEN 1149011330 PRINT @D:"","FORTRAN STATEMENT NUMBERS TO BASIC LINE NUMBERS"11340 PRINT @D:"


FORTRAN","BASIC
"11350 I0=111360 S$="(MAIN)"11370 FOR I=1 TO LEN(T$)/6-111380 IF I=1 THEN 1142011390 IF T(I)<L(I0) OR L(I0)=0 THEN 1144011400 I0=I0+111410 S$=SEG(F$,(I0-2)*7+1,7)11420 PRINT @D:"
ROUTINE: ";S$;"
"11430 GO TO 1139011440 R$=SEG(T$,(I-1)*6+1,6)11450 PRINT @D:R$,T(I)11460 NEXT I11470 PRINT "


PRESS RETURN TO CONTINUE";11480 INPUT R$11490 PRINT @D:"","FORTRAN VARIABLES TO BASIC VARIABLES"11500 PRINT @D:"


FORTRAN","BASIC
"11510 FOR I=1 TO 1820 STEP 711520 R$=SEG(V$,I,7)11530 IF R$="       " THEN 1158011540 S$=CHR(INT(I/70)+65)11550 Q$=STR(INT((I/70-INT(I/70))*10))11560 Q$=REP("",1,1)11570 PRINT @D:R$,S$;Q$11580 NEXT I11590 PRINT "


PRESS RETURN TO CONTINUE";11600 INPUT R$11610 REM FORTRAN SUBROUTINES TO BASIC LINE NUMBERS (GOSUB)11620 PRINT @D:"","FORTRAN SUBROUTINE NAMES TO BASIC LINE NUMBERS"11630 PRINT @D:"


SUBROUTINE NAME","BASIC LINE NUMBER
"11640 IF LEN(F$)=0 THEN 1169011650 FOR I=1 TO LEN(F$) STEP 711660 R$=SEG(F$,I,7)11670 PRINT @D:R$,L((I-1)/7+1)11680 NEXT I11690 PRINT "


"11700 END 