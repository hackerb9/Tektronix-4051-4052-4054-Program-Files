100 REM * ENHANCED PROGRAM LISTINGS *110 REM120 REM Tim Giesbers   September 6, 1980   Tektronix 4050130 REM140 REM    This program will read any ASCII program file (or150 REM consecutive files) and list the program in the file on the160 REM output device chosen by the user, with emphasis on REM170 REM statements, and indenting for any statements inside FOR/NEXT180 REM loops.  It can also automatically copy the listing, if it is190 REM on the screen, and pause for any number of seconds at the 200 REM bottom of each page.  At the end of each file listing, the210 REM length of the program (in bytes) is printed.220 REM    Idea from a program of Dan Taylors', and from Roger Chan's230 REM program, "Automatic Hardcopy File Listings", Applications240 REM Library abstract #51/00-8037/0.250 REM260 REM variables:270 REM A$ - string used to input each line of code from the file(s)280 REM B  - length in bytes of the program in file F290 REM B$ - answer to Y/N automatic hard copy question300 REM C  - line counter (execute a form feed when C=>L)310 REM D  - device the listing(s) will be printed at320 REM F  - the file we're presently listing (FOR/NEXT loop index)330 REM F1 - first file number to list340 REM F2 - last file number to list350 REM I  - FOR/NEXT loop index360 REM I1 - FOR/NEXT loop index370 REM I2 - FOR/NEXT loop index380 REM I$ - spaces for indenting lines that are inside FOR/NEXT loops390 REM K$ - keyword seperated from A$400 REM L  - number of lines to print before doing a form feed410 REM L$ - the keyword for the statement preceding the one in A$420 REM P  - number of seconds to pause before executing a430 REM      form feed for the coming lines440 REM R$ - scratch used in the routine that converts control 450 REM      characters460 REM X$ - miscellaneous input470 INIT 480 DIM A$(200),B$(1),I$(20),K$(3),L$(3),R$(3)490 I$=""500 L$=""510 REM find out which files & format the user wants to list520 PRINT "ENHANCED PROGRAM LISTINGS

"530 PRINT "First file to list:  ";540 INPUT F1550 IF F1<1 OR F1>256 OR F1<>INT(F1) THEN 530560 PRINT "Last file to list:  ";570 INPUT F2580 IF F2<F1 OR F2>256 OR F2<>INT(F2) THEN 560590 B$=""600 PRINT "
Output device (32__):  ";610 INPUT X$620 IF X$="" THEN 650630 D=VAL(X$)640 GO TO 680650 D=32660 PRINT "Automatic copies (Y/N_):  ";670 INPUT B$680 PRINT "How many lines per page (33__):  ";690 INPUT X$700 IF X$="" THEN 730710 L=VAL(X$)720 GO TO 740730 L=33740 PRINT "How many seconds of pause (2_):  ";750 INPUT X$760 IF X$="" THEN 790770 P=VAL(X$)780 GO TO 800790 P=2800 FOR F=F1 TO F2810 FIND F820 B=1830 PRINT @D:"FILE #";F;"
"840 C=2850 FOR I1=1 TO 10000860 INPUT @33:A$870 IF LEN(A$)<1 THEN 980880 REM the "+1" in the next line is for the carriage return890 REM that is stored on tape, but not read in with A$900 B=B+LEN(A$)+1910 GOSUB 1030920 GOSUB 1300930 C=C+1940 PRINT @D:A$950 IF C<L THEN 970960 GOSUB 1180970 NEXT I1980 PRINT @D:"
Length: ";B;" bytes"990 GOSUB 11801000 NEXT F1010 PRINT "DONE"1020 END 1030 REM The following subroutine replaces control characters with1040 REM the letters they represent, and underscores them, so the1050 REM listing of program lines turns out just as it would using1060 REM the LISt command.  From a programming tip in Tekniques, 1070 REM volume 4, no. 2, by Wayne Miller.1080 IF POS(A$,"""",1)=0 AND POS(A$,"REM",1)=0 THEN 11701090 FOR I=LEN(A$) TO 1 STEP -11100 R$=SEG(A$,I,1)1110 IF R$=>" " THEN 11601120 R$=CHR(ASC(R$)+64)1130 REM the underscore in the next line is a shift/rubout1140 R$=R$&"_"1150 A$=REP(R$,I,1)1160 NEXT I1170 RETURN 1180 REM time delay/new page routine1190 C=01200 IF P=0 THEN 12601210 IF RND(0)<0.2 THEN 12401220 CALL "WAIT",P1230 GO TO 12601240 FOR I2=1 TO P*2251250 NEXT I21260 IF B$<>"Y" OR D<>32 THEN 12801270 COPY 1280 PRINT @D:"";1290 RETURN 1300 REM find keyword:1310 REM   if keyword is "FOR", indent more1320 REM   if keyword is "NEX", indent less1330 REM   if keyword is "REM", line feed for emphasis1340 K$=SEG(A$,POS(A$," ",1)+1,3)1350 IF K$<>"FOR" THEN 13701360 I$=I$&"    "1370 IF K$<>"NEX" OR LEN(I$)=0 THEN 13901380 I$=REP("",1,4)1390 IF I1=1 AND K$="REM" THEN 14501400 IF K$<>"REM" AND L$="REM" THEN 14301410 IF K$="REM" AND L$<>"REM" THEN 14301420 GO TO 14601430 PRINT @D:1440 C=C+11450 GO TO 14601460 IF K$="FOR" THEN 14901470 A$=REP(I$,POS(A$," ",1),0)1480 GO TO 15201490 I$=REP("",1,4)1500 A$=REP(I$,POS(A$," ",1),0)1510 I$=I$&"    "1520 L$=K$1530 RETURN 