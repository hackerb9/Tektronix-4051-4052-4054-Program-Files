1000 REM ******   FORTRAN TO BASIC CONVERTER PROGRAM1010 REM ******   MARK R. MEHALL  FEB. 19801020 REM ******   COPYRIGHT (C) 1980 TEKTRONIX, INC.1030 REM ***** FIRST PASS1040 REM SETION TO DETERMINE LINE NUMBERS OF FORTRAN IN BASIC1050 REM   N IS THE FORTRAN LINE NUMBER (IF PRESENT)1060 REM   T$ IS THE TABLE OF FORTRAN NUMBERS (5 CHARACTERS EACH)1070 DIM T$(1500)1080 T$=""1090 REM P IS A TABLE OF POINTERS INTO T$ FOR LINE NUMBERS IN SUBS.1100 DIM P(50)1110 P(1)=11120 REM   I0 IS AN INDEX INTO P (NUMBER OF THE SUBROUTINE)1130 I0=11140 REM   V$ IS THE TABLE OF FORTRAN VARIABLES1150 DIM V$(26*10*7)1160 V$=""1170 R$="                                   "1180 FOR I=1 TO 26*21190 V$=REP(R$,1,0)1200 NEXT I1210 REM   B IS THE BASIC LINE NUMBER FOR THE CARD1220 REM     START=100 INCREMENT=101230 B=1001240 REM   T  IS THE TABLE OF CORRESPONDING BASIC LINE NUMBERS TO T$1250 DIM T(300)1260 REM   C$ IS THE CARD IMAGE PLUS 19 CONTINUATION STATEMENTS1270 DIM C$(72+19*72)1280 C$=""1290 REM A$ IS THE INPUT CARD IMAGE1300 DIM A$(80)1310 REM   K$ IS THE TABLE OF KEYWORDS (FORTRAN) (TRUNCATED TO 6 CHARS)1320 DIM K$(216)1330 K$=""1340 K$=K$&"READ  WRITE FORMA IF    GOTO  GO    DO    DIMEN CALL  "1350 K$=K$&"END   RETUR STOP  SUBRO EQUIV CONTI FUNCT DEFIN ENCOD "1360 K$=K$&"DATA  INTEG REAL  DOUBL RETUR EXIT  EXTER COMMO DECOD "1370 K$=K$&"BLOCK ASSIG ENTRY IMPLI LOGIC TO    PAUSE CHARA ERR   "1380 REM   I$ IS THE TABLE OF INTERNAL ROUTINES (FORTRAN)1390 REM   J$ IS THE TABLE OF CORRESPONDING BASIC ROUTINES1400 DIM I$(162),J$(162)1410 I$=""1420 J$=""1430 I$=I$&"ABS   IABS  FLOAT IFIX  ISIGN IDIM  AMOD  "1440 J$=J$&"ABS   ABS         INT   FNS   FND   FNM   "1450 I$=I$&"SIGN  DIM   MOD   "1460 J$=J$&"FNS   FND   FNM   "1470 I$=I$&"AINT  AMAX0 AMAX1 AMIN0 AMIN1 "1480 J$=J$&"INT   MAX   MAX   MIN   MIN   "1490 I$=I$&"INT   MAX0  MAX1  MIN0  MIN1  "1500 J$=J$&"INT   MAX   MAX   MIN   MIN   "1510 I$=I$&"EXP   ALOG  ALOG1 ATAN  SIN   COS   SQRT  "1520 J$=J$&"EXP   LOG   LGT   ATN   SIN   COS   SQR   "1530 REM   F$ IS THE TABLE OF FORTRAN SUBROUTINE NAMES (MAXIMUM 50)1540 REM    7 CHARACTERS EACH ENTRY (6 PER NAME PLUS SPACE)1550 DIM F$(350)1560 F$=""1570 REM   L IS THE TABLE OF LINE NUMBERS (BASIC) OF THE SUBROUTINES1580 DIM L(50)1590 L=01600 REM O$ IS THE TABLE OF FORTRAN LOGICAL OPERATORS1610 O$=".EQ.NE.GT.LT.GE.LE.OR.AND.NOT.TRUE.FALSE."1620 REM P$ IS THE TABLE OF BASIC LOGICAL OPERATORS1630 P$=" =  <> >  <  >= <= OR AND NOT 1    0     "1640 REM U IS THE UNDEFINED (OR SYSTEM) SUBROUTINE LINE NUMBER1650 U=654001660 REM S0 IS A SUBROUTINE FLAG (USED TO REM THE END STATEMENT)1670 S0=01680 REM F0 IS A FLAG TO PROCESS NEW CARD IMAGES 1690 REM    THAT ARE CREATED BY THE STATEMENT ROUTINES1700 F0=01710 REM D$ IS THE TABLE OF BASIC VARIABLES (USED WITH FOR-NEXT)1720 REM B$ IS THE TABLE OF BASIC LINE NUMBERS (USED WITH FOR-NEXT)1730 DIM D$(50*3),B$(50*6)1740 B$=""1750 D$=""1760 PRINT "FIRST PASS --- NOT BASIC YET!"1770 REM FIND THE SCRATCH FILE ON THE INTERNAL DRIVE1780 FIND 21790 REM FIND THE FORTRAN FILE ON THE 49241800 FIND @4:11810 ON SRQ THEN 29201820 REM INPUT A CARD1830 INPUT @4:A$1840 IF LEN(A$)=0 THEN 18301850 REM REMOVE CARD NUMBERS IF PRESENT (COL 73-80)1860 A$=SEG(A$,1,72)1870 REM TRIM TRAILING BLANKS IF PRESENT1880 FOR I=LEN(A$) TO 1 STEP -11890 R$=SEG(A$,I,1)1900 IF R$<>" " THEN 19201910 NEXT I1920 A$=SEG(A$,1,I)1930 REM CHECK FOR FIRST CARD 1940 IF C$<>"" THEN 19901950 C$=A$1960 REM GET THE NEXT CARD1970 GO TO 18301980 REM CHECK FOR A COMMENT CARD ('C' OR '*' IN COLUMN ONE)1990 IF ASC(A$)=67 OR ASC(A$)=42 THEN 20902000 REM CHECK FOR A CONTINUATION CARD (NONBLANK COLUMN SIX)2010 R$=SEG(A$,6,1)2020 IF R$=" " THEN 20902030 REM REMOVE COLUMNS ONE TO SIX AND APPEND TO C$2040 A$=REP("",1,6)2050 C$=REP(A$,LEN(C$)+1,0)2060 REM GET THE NEXT CARD2070 GO TO 18302080 REM EXTRACT THE STATEMENT NUMBER2090 N$=SEG(C$,1,5)2100 REM CHECK FOR A COMMENT ("C" OR "*" IN COLUMN ONE)2110 REM USE ASC TO CHECK THE FIRST CHARACTER OF N$2120 IF ASC(N$)=67 OR ASC(N$)=42 THEN 23202130 REM APPEND "-1" TO N$ TO CHECK FOR NO NUMBER2140 N$=N$&"-1"2150 N=VAL(N$)2160 REM CHECK FOR A BLANK FIELD2170 IF N=-1 THEN 23402180 REM GOT A NUMBER - STORE IT2190 N$=STR(N)2200 N$=REP("",1,1)2210 REM PAD TO 6 CHARACTERS2220 U$="      "2230 U$=REP(N$,1,LEN(N$))2240 REM STICK IT IN T$ AT THE NEXT SLOT2250 T$=REP(U$,LEN(T$)+1,0)2260 REM SAVE THE BASIC LINE NUMBER IN T2270 T(LEN(T$)/6)=B2280 REM REMOVE THE FORTRAN NUMBER2290 C$=REP("      ",1,6)2300 GO TO 23402310 REM MAKE THE COMMENT A REMARK STATEMENT2320 C$=REP("      REM ",1,1)2330 REM INSERT THE BASIC LINE NUMBER2340 R$=STR(B)2350 C$=REP(R$,6-LEN(R$),LEN(R$))2360 REM IF A COMMENT CARD - SKIP THE VARIABLE ROUTINE2370 REM USE ASC TO CHECK THE FIRST CHARACTER OF N$2380 IF ASC(N$)=67 OR ASC(N$)=42 THEN 28502390 REM CHECK FOR A SUBROUTINE (OR FUNCTION OR ENTRY) STATEMENT2400 P0=POS(C$,"SUBROUTINE",7)+POS(C$,"FUNCTION",7)2410 IF P0=0 THEN 24702420 REM GOT A SUBROUTINE OR FUNCTION SET THE POINTER FOR LINE NUMBERS2430 I0=I0+12440 P(I0)=LEN(T$)+12450 GO TO 25402460 REM CHECK FOR AN ENTRY STATEMENT2470 P0=POS(C$,"ENTRY",7)2480 REM IF IT IS NOT A SUBROUTINE STATEMENT CONTINUE2490 IF P0=0 THEN 28202500 REM GOT AN ENTRY STATEMENT INCREMENT I0 AND USE OLD P(I0)2510 I0=I0+12520 P(I0)=P(I0-1)2530 REM GET THE FORTRAN SUBROUTINE NAME2540 P0=POS(C$," ",P0)+12550 S$=SEG(C$,P0,1)2560 IF S$=>"A" AND S$<="Z" THEN 25902570 P0=P0+12580 GO TO 25502590 REM GOT THE FIRST ALPHA NOW GET THE REST OF IT2600 P1=P0+12610 IF P1>LEN(C$) THEN 26802620 R$=SEG(C$,P1,1)2630 REM SEE IF IT IS A SPECIAL CHARACTER2640 IF POS(" +-/*=.,()$'",R$,1)<>0 THEN 26802650 S$=S$&R$2660 P1=P1+12670 GO TO 26102680 REM MAKE THE CARD A REMARK STATEMENT2690 C$=REP("REM ",7,0)2700 P1=POS(C$,S$,7)2710 REM GOT THE FORTRAN SUBROUTINE NAME NOW STORE IT IN F$2720 REM PAD TO SEVEN CHARACTERS2730 R$="       "2740 R$=REP(S$,1,LEN(S$))2750 F$=F$&R$2760 REM AND REMEMBER THE BASIC LINE NUMBER IN L2770 L(LEN(F$)/7)=B2780 REM NOW SET THE POINTER PAST THE FORTRAN SUBROUTINE NAME2790 P0=POS(C$,"(",P1)2800 GOSUB 30102810 GO TO 28402820 REM CONVERT THE FORTRAN VARIABLES INTO BASIC2830 GOSUB 29802840 REM PRINT THE NEW STATEMENT2850 PRINT C$2860 PRINT @33:C$2870 REM SET C$ TO A$ (PROCESS THE PREVIOUS 'NEXT' CARD)2880 C$=A$2890 REM INCREMENT THE BASIC LINE NUMBER AND GET A NEW CARD2900 B=B+102910 GO TO 18302920 REM DIMENSION T TO THE PROPER LENGTH2930 INPUT @4,30:A2940 IF LEN(T$)=0 THEN 29602950 DIM T(LEN(T$)/6)2960 REM GET THE SECOND PASS2970 GO TO 40302980 REM VARIABLE DECODE SECTION2990 REM START AT COLUMN 7 AND FIND THE FIRST ALPHA3000 P0=73010 IF P0>LEN(C$) OR P0=0 THEN 36603020 S$=SEG(C$,P0,1)3030 IF S$<>"'" AND S$<>"""" THEN 30603040 P0=POS(C$,"'",P0+1)+POS(C$,"""",P0+1)+13050 GO TO 30203060 IF S$=>"A" AND S$<="Z" THEN 30903070 P0=P0+13080 GO TO 30103090 P1=P0+13100 IF P1>LEN(C$) THEN 31803110 R$=SEG(C$,P1,1)3120 REM SEE IF IT IS A SPECIAL CHARACTER3130 IF POS(" +-/*=.,()$'",R$,1)<>0 THEN 31703140 S$=S$&R$3150 P1=P1+13160 GO TO 31003170 REM SEE IF IT IS A ONE CHARACTER VARIABLE3180 IF LEN(S$)>1 THEN 32103190 P0=P13200 GO TO 30103210 REM CHECK THE FIRST FIVE CHARACTERS FOR A FORTRAN KEYWORD3220 Q$="     "3230 R$=SEG(S$,1,5)3240 Q$=REP(R$,1,LEN(R$))3250 P2=POS(K$,Q$,1)3260 IF P2=0 THEN 34003270 REM SEE IF IT IS A FORMAT STATEMENT STATEMENT - SKIP CARD3280 IF R$="FORMA" THEN 37103290 REM CHECK FOR A CALL STATEMENT - SKIP THE SUBROUTINE NAME3300 IF Q$<>"CALL " THEN 33703310 REM POSITION THE POINTER PAST THE SUBROUTINE NAME3320 P1=POS(C$,"(",P0)+13330 IF P1>1 THEN 33703340 REM THE SUBROUTINE DOESN'T HAVE ANY ARGUMENTS TO CONVERT - SKIP IT3350 GO TO 36603360 REM IT IS A KEYWORD - SKIP IT3370 P0=P13380 GO TO 30103390 REM SEE IF IT IS A FORTRAN LOGICAL OPERATOR3400 Q$=SEG(C$,P0-1,1)3410 IF Q$<>"." THEN 34803420 IF POS(O$,R$,1)=0 THEN 34803430 REM IT IS AN OPERATOR - REPLACE IT3440 U$=SEG(P$,POS(O$,R$,1)-1,LEN(R$)+2)3450 C$=REP(U$,P0-1,LEN(R$)+2)3460 P0=P13470 GO TO 30103480 REM CHECK FOR AN INTERNAL FORTRAN ROUTINE3490 REM PAD TO 6 CHARACTERS3500 U$="      "3510 U$=REP(R$,1,LEN(R$))3520 P2=POS(I$,U$,1)3530 IF P2=0 THEN 36103540 REM IT IS A INTERNAL ROUTINE SUBSTITUTE THE BASIC ROUTINE3550 R$=SEG(J$,P2,3)3560 C$=REP(R$,P0,LEN(S$))3570 REM GET THE NEXT VARIABLE3580 REM SET THE POINTER AT THE END OF THE BASIC FUNCTION3590 P0=P0+33600 GO TO 30103610 REM S$ IS A FORTRAN VARIABLE CONVERT IT TO BASIC3620 GOSUB 37203630 REM GET THE NEXT3640 P0=P0+23650 GO TO 30103660 REM CHECK FOR AN EXPONENTIAL OPERATOR '**' CONVERT IT TO '^'3670 P0=POS(C$,"**",7)*(POS(C$,"'",7)+POS(C$,"""",7)=0)3680 IF P0=0 THEN 37103690 C$=REP("^",P0,2)3700 GO TO 36703710 RETURN 3720 REM FORTRAN VARIABLE TO BASIC SUBROUTINE3730 REM PAD THE FORTRAN VARIABLE TO SEVEN CHARACTERS3740 U$="       "3750 U$=REP(S$,1,LEN(S$))3760 REM SEE IF IT IS IN THE TABLE3770 P2=POS(V$,U$,1)3780 IF P2<>0 THEN 39703790 REM PUT IT IN THE TABLE3800 P2=(ASC(S$)-65)*70+13810 N=P23820 REM SEE IF THE SLOT IS OPEN3830 R$=SEG(V$,P2,7)3840 IF R$="       " THEN 39503850 REM TRY THE NEXT SLOT3860 P2=P2+73870 REM SEE IF ALL SLOTS ARE FILLED3880 IF P2<>N THEN 39103890 PRINT "ALL THE POSSIBLE BASIC VARIABLES ARE IN USE. (TERMINATED)"3900 END 3910 IF P2<1820 THEN 38303920 P2=P2-18203930 GO TO 38303940 REM PUT THE FORTRAN VARIABLE IN THE TABLE3950 V$=REP(S$,P2,LEN(S$))3960 REM REPLACE IT WITH THE BASIC VARIABLE3970 R$=CHR(INT(P2/70)+65)3980 Q$=STR(INT((P2/70-INT(P2/70))*10))3990 Q$=REP(R$,1,1)4000 C$=REP(Q$,P0,LEN(S$))4010 RETURN 4020 REM DELETE THIS PROGRAM AND BRING IN THE SECOND PASS4030 FIND 34040 DELETE 1030,40404050 APPEND 4050,0