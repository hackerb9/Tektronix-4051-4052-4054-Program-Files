1 PAGE 2 LIST 100,99993 RETURN 100 REM * This program is designed for use with the gas display110 REM * unit. It will accept any number of messages, the limit being120 REM * the memory capacity of the 4051.  A variable time delay130 REM * between messages is allowed.  The program was written by140 REM * Chuck Paulsen in Dec, 1979 and revised by Woody Johnson145 REM * in Jan, 1980.146 REM147 REM165 REM * Each D$ is one complete page, and is 32 lines by 8 rows big,166 REM * or 256 characters long170 DIM D$(256)172 REM * P$ takes each character in D$ and converts it into its173 REM * ASCII equivalent175 DIM P$(1)177 REM * Initialize D$180 D$=" "190 FOR I=1 TO 255200 D$=D$&" "210 NEXT I230 REM M9=# of messages235 PAGE 240 PRINT "HOW MANY PAGES OF MESSAGES DO YOU WANT ";250 INPUT M9255 REM * T5 is the time delay after each message260 DIM T5(M9)270 PRINT "INPUT TIME DELAY (IN SEC.) BETWEEN MESSAGES.
"280 FOR I=1 TO M9290 PRINT "DELAY AFTER MESSAGE #";I;" IS= ";300 INPUT T5(I)310 NEXT I315 REM *320 REM * E is a 95 x 2 array. The elements of the form E(x,1) are321 REM * the correct bit patterns that the gas display needs to322 REM * output alphabetic characters.  This comes about because the323 REM * display uses six bit ASCII code and the 4051 uses standard324 REM * seven bit code. Elements of the form E(x,2) are the parity325 REM * bits that correspond to the bit patterns required by the gas326 REM * display. E(x,2) forces the bit in the seventh column to be327 REM * 1 since the gas display demands this.330 DIM E(95,2)335 REM * S$ is the string in which all of the messages will be held340 DIM S$(M9*256*3)345 REM * Initialize the array E.350 E=0355 REM * Initialize s$360 S$=""365 REM * Replace columns 1 and 2 of ASCII code by columns 5 and 6.366 REM * See an ASCII code chart. This is done because in a six bit367 REM * code, ASCII(64), the "@" sign has the bit pattern "000000".368 REM * All of the succeeding characters are like this, so in a six369 REM * bit code, "A" is "100000"370 FOR T=64 TO 95380 E(T,1)=T-64390 READ E(T,2)400 NEXT T410 DATA 1,0,0,1,0,1,1,0,0,1,1,0,1,0,0,1420 DATA 0,1,1,0,1,0,0,1,1,0,0,1,0,1,1,0425 REM * Columns 3 and 4 of ASCII code are the same in both six426 REM * and seven bit codes.430 FOR T=32 TO 63440 E(T,1)=T450 READ E(T,2)460 NEXT T470 DATA 0,1,1,0,1,0,0,1,1,0,0,1,0,1,1,0480 DATA 1,0,0,1,0,1,1,0,0,1,1,0,1,0,0,1482 REM *485 REM * E(59,1) is the character ";" with an underline. It is used486 REM * for block lettering on the gas display. E(59,2) sets its487 REM * parity correctly.490 E(59,1)=123500 E(59,2)=11000 REM Input of multiple messages1010 FOR M=1 TO M91020 PAGE 1030 MOVE 57.2,1001040 DRAW 57.2,01050 PRINT "


";1055 REM * L is the line # within the message stored in D$1060 FOR L=1 TO 81070 PRINT "		<<INPUT...LINE ";L;" OF MESSAGE ";M;""1075 REM * Initialize Z$1080 Z$="                                "1085 REM * M$ is that part of the message in line L1090 INPUT M$1095 REM * Put M$ into Z$1100 Z$=REP(M$,1,LEN(M$))1105 REM * Create the string D$, a total one page message1110 D$=REP(Z$,(L-1)*32+1,32)1120 NEXT L1125 REM * U$ is the ASCII value assigned to a string1130 DIM U$(3)1132 REM * In the following loop, P$ takes one character at a time1133 REM * out of the string D$. The ASCII value of P$ is put into C.1134 REM * C is changed into a string and put into U$. The STR 1135 REM * function adds a space at the beginning, and this must be1136 REM * removed. Line 1180 does this. The loop in lines 1190-12101137 REM * makes sure that U$ is 3 characters long. Finally, The string 1138 REM * U$ is added to the total message string S$.1140 FOR I=1 TO 2561150 P$=SEG(D$,I,1)1160 C=ASC(P$)1170 U$=STR(C)1180 U$=SEG(U$,2,LEN(U$))1190 IF LEN(U$)=3 THEN 12201200 U$="0"&U$1210 GO TO 11901220 S$=S$&U$1230 NEXT I1240 NEXT M1245 REM * E,M9,T5, and S$ are stored on mag tape.1250 PRINT "WHAT DATA FILE DO YOU WANT THIS SAVED ON  ";1260 INPUT F51270 FIND F51280 WRITE E1290 WRITE M91300 WRITE T51310 WRITE S$1320 END 