1 PAGE 2 LIST 100,99993 RETURN 100 REM * This program is designed to read a data file which was110 REM * created using the program on file 2. This program outputs120 REM * the data on to the gas display device. Software and hardware130 REM * created by Chuck Paulsen, Dec, 1979. Software revised by140 REM * Woody Johnson, Jan, 1980.150 REM160 REM170 INIT 180 PAGE 190 REM * C$, "1 ", is the bit pattern needed to clear the gas display 200 C$="1"&""210 C$=C$&" "220 REM * E is a 95 x 2 array. The elements of the form E(x,1) are230 REM * the correct bit patterns that the gas display needs to240 REM * output alphabetic characters.  This comes about because the250 REM * display uses six bit ASCII code and the 4051 uses standard260 REM * seven bit code.  Elements of the form E(x,2) are the parity270 REM * bits that correspond to the bit patterns required by the gas280 REM * display since the gas display demands a "1" in its parity290 REM * column.300 DIM E(95,2)310 PRINT "INPUT DATA FILE #  ";320 INPUT F5330 FIND F5340 READ @33:E350 REM * M9 is the number of messages.360 READ @33:M9370 REM * T5 is the time delay between each message, S$ is the380 REM * string that contains all the messages.390 DIM T5(M9),S$(256*M9*3)400 READ @33:T5410 READ @33:S$420 REM * Output display pages and time them.                   430 FOR M=1 TO M9440 REM * C9 is the starting point for the loop in line 510.  It is450 REM * 1 the first time, then 1+256, 1+512, etc. It is used to460 REM * to divide the total message string, S$, into individual470 REM * message pages.480 C9=M*256-255490 CALL "RATE",2400,1,2500 REM * This loop clears the gas display device.510 FOR D3=1 TO 5520 PRINT @40:C$;530 NEXT D3540 REM * This loop outputs one page at a time, that is 256 550 REM * consecutive characters at a time. Each T$, a string of560 REM * length equal to 3, is the ASCII equivalent of a character570 REM * in the six bit version of ASCII code. T converts T$ into580 REM * a number.590 FOR I=C9 TO C9+255600 T$=SEG(S$,(I-1)*3+1,3)610 T=VAL(T$)620 GOSUB 700630 NEXT I640 REM * The following loop is the time delay between messages.650 FOR D=1 TO T5(M)*100660 NEXT D670 NEXT M680 GO TO 430690 END 700 REM SUBROUTINE    INPUT T VALUE.....OUTPUT CHARACTER TO DEVICE710 REM * E(T,2) sets the correct parity.720 CALL "RATE",2400,E(T,2),2730 REM * E$ becomes the character corresponding to the desired740 REM * ASCII value.750 E$=CHR(E(T,1))760 PRINT @40:E$;770 RETURN 