1 REM*B 4907 TO 4909 TRANSFER/CONVERT UTILITY VERSION 1.12 GO TO 6500080 GO TO 2500100 REM*R Check_4909_Command(P$::)110 GOSUB 500120 IF E1<=0 THEN 140130 GOSUB 1000140 RETURN 500 REM*R Write_4909_Command(P$::)510 PRINT @H:P$520 INPUT @H:M$522 S$=SEG(M$,1,3)524 V8=S$="@Q:"530 S$=""540 IF S$="@J_" OR S$="EOTJ_" OR (S$="J_" AND V8) THEN 610550 INPUT @H:S$560 IF LEN(M$)=M1 THEN 600570 M$=M$&" "580 S$=SEG(S$,1,M1-LEN(M$))590 M$=M$&S$600 GO TO 540610 IF NOT(V8) THEN 618612 PRINT @H:"@YES"614 GO TO 520618 GOSUB 2000620 RETURN 1000 REM*R Abort_4909(::)1010 IF E1<10000 THEN 10501020 PRINT "**** 4909 GPIB Protocol Error; Status Byte = ";E1-10000;1030 PRINT " ****"1040 GO TO 10601050 PRINT "**** Unexpected 4909 Error: ";E1;" ****"1052 S$=SEG(M$,POS(M$,"@E:Error:",1)+13,62)1054 T$=SEG(S$,LEN(S$),1)1055 IF T$<>" " THEN 10581056 S$=REP("",LEN(S$),1)1057 GO TO 10541058 PRINT "**** ";S$;" ****"1060 PRINT "**** FATAL ERROR ****"1070 STOP 1080 RETURN 1500 REM*R Srq_Handler(::)1510 WBYTE @63,95:1515 IF H=-1 THEN 16301520 POLL V6,V7;H;01530 IF V6=2 THEN 16101540 REM 4909 error. Protocol error?1550 IF V7-INT(V7/16)*16>7 THEN 16301560 REM Protocol error. Abort1570 M$=""1580 E1=10000+V7-INT(V7/16)*161590 GOSUB 10001600 STOP 1610 PRINT "J_4907 SRQ Error. Fatal Error."1620 STOP 1630 RETURN 2000 REM*R Get_Error_Number(::)2010 E1=02015 S$=SEG(M$,1,3)2020 IF POS(M$,"@E:Error:",1)<>1+4*(S$="@SJ_") THEN 20402030 E1=VAL(M$)2040 RETURN 2500 REM*R Stop_Key_Handler(::)2505 WBYTE @63,95:2510 SET NOKEY 2520 IF S1=0 THEN 27152530 PRINT "Please wait while temporary files are deleted."2535 IF C2=2 THEN 27002540 IF S1=1 THEN 27002550 WBYTE @H+32,4:2570 P$="CLOSE LFN:ALL"2580 GOSUB 5002590 IF S1<>2 THEN 26302600 CLOSE 32610 OPEN "@C49074909/FILELIST";3,"R",S$2620 GOSUB 30002630 IF H$=" " THEN 26802640 P$="DELETE "&H$2645 P$=P$&" NINQ"2650 GOSUB 5002660 GOSUB 30002670 GO TO 26302680 P$="IDENTIFY"2690 GOSUB 5002700 CLOSE 2710 KILL "@C49074909#"2715 PRINT @32,26:02720 PRINT "Execution stopped."2725 DELETE ALL 2730 END 3000 REM*R Get_Next_Filename(::)3010 SET NOKEY 3020 IF TYP(3)=1 THEN 30503030 INPUT #3:F$,H$3040 GO TO 30703050 F$=" "3060 H$=" "3070 S1=33080 SET KEY 3090 RETURN 5000 REM*R Initialize(::)5010 INIT 5020 READ N2,U1,M15030 DATA 128,128,1005040 DIM N0(N2),U0(U1),M$(M1)5050 DIM C$(128),P$(128),L$(256),T$(300)5060 DIM B0(3),C0(11,2),E7(4),F0(4),E0(11)5070 READ B2,C2,E1,H1,L2,S1,M9,L3,C3,H,E05080 DATA 1,0,0,10,999,0,0,1,0,-15081 REM E0(1) unit not ready   (5) access violation    (9) unit io5082 REM   (2) unit not mounted (6) write protect       (10) unit read5083 REM   (3) unit not found   (7) dup file            (11) dir damage5084 REM   (4) volume not found (8) user not found5085 DATA 7,8,15,14,31,6,25,26,2,3,125090 SET KEY 5100 RETURN 6000 REM*R Get_User_Parameters(::)6010 GOSUB 300006020 GOSUB 310006030 GOSUB 320006040 GOSUB 340006050 GOSUB 360006052 DELETE 30000,369996054 M9=MEMORY6056 FIND 36058 APPEND 370006060 GOSUB 370006070 GOSUB 410006080 GOSUB 420006100 RETURN 7000 REM*R Get_Number_Range(P0,P1,P2::P3,P9)7010 GOSUB 120007020 IF P$="" THEN 71107030 S$=P$&" 1"7040 T$=P$&" 9"7050 IF VAL(S$)<>VAL(T$) THEN 70907060 P3=VAL(S$)7070 P9=P3<P0 OR P3>P1 OR INT(P3)<>P37080 GO TO 71307090 P9=17100 GO TO 71307110 P3=P27120 P9=P2=-1.0E+3007130 RETURN 8000 REM*R Get_Yes_No(P0::P1,P9)8010 GOSUB 120008020 P9=08030 IF P$<>"" THEN 80608040 P1=P08050 GO TO 81308060 IF POS("NO",P$,1)<>1 THEN 80908070 P1=08080 GO TO 81308090 IF POS("YES",P$,1)<>1 THEN 81208100 P1=18110 GO TO 81308120 P9=18130 RETURN 9000 REM*R Get_Volume_Or_Unit_Name(::P$,P9)9010 GOSUB 120009020 IF P$<>"" THEN 90809030 P9=09040 GO TO 92309080 GOSUB 160009090 IF P9 THEN 91309095 P9=LEN(P$)>109100 P$="VOLUME: "&P$9110 GO TO 92309130 FOR I8=1 TO LEN(P$)9140 S$=SEG(P$,I8,1)9150 P9=POS("0123456789",S$,1)=09160 IF P9 THEN 92309170 NEXT I89180 T$=P$&" -1"9190 IF VAL(T$)<0 OR VAL(T$)>255 THEN 92209195 T$=STR(VAL(T$))9200 P$="UNIT:"&T$9210 GO TO 92309220 P9=19230 RETURN 10000 REM*R Get_4907_Filename(::P$,P9)10010 GOSUB 1200010020 P9=010030 IF P$="" OR P$="#" OR P$="@#" OR P$="$#" THEN 1035010040 S$=SEG(P$,1,1)10050 L8=S$<>"@"10060 A8=1+(S$="@" OR S$="$")10070 B8=POS(P$,"/",A8)10080 IF P9 OR B8<1 THEN 1018010090 L8=L8+110100 IF L8<5 THEN 1013010110 P9=110120 GO TO 1017010130 R$=SEG(P$,A8,B8-A8)10140 P0=010150 GOSUB 1500010160 A8=B8+110170 GO TO 1007010180 B8=POS(P$,"#",A8)10190 IF P9 OR B8<1 THEN 1031010200 S$=SEG(P$,B8+1,1)10210 L8=L8+1+(S$<>"." AND S$<>"")10220 IF L8<5 THEN 1025010230 P9=110240 GO TO 1032010250 R$=SEG(P$,A8,B8-A8)10260 P0=010270 GOSUB 1500010280 A8=B8+110290 P0=110300 GO TO 1032010310 P0=010320 Q$=SEG(P$,A8,LEN(P$)-A8+1)10330 IF P9 THEN 1035010340 GOSUB 1300010350 RETURN 11000 REM*R Get_4909_Filename(::P$,P9)11010 GOSUB 1200011020 P9=LEN(P$)>10011025 T$=P$11030 IF T$="" OR P9 THEN 1120011040 A8=111050 B8=POS(T$,"/",A8)11060 IF B8=0 OR P9 THEN 1111011070 P$=SEG(T$,A8,B8-A8)11080 GOSUB 1600011090 A8=B8+111100 GO TO 1105011110 IF P9 THEN 1120011120 B8=POS(T$,".",A8)11130 B8=B8+(LEN(T$)+1)*(B8=0)11140 P$=SEG(T$,A8,B8-A8)11150 GOSUB 1600011160 IF P9 OR B8>LEN(T$) THEN 1120011170 P$=SEG(T$,B8+1,LEN(T$)-B8)11180 IF P$="" THEN 1120011190 GOSUB 1600011200 P$=T$11210 RETURN 12000 REM*R Get_Input(::P$)12010 INPUT P$12020 S$=SEG(P$,1,1)12030 IF S$<>" " THEN 1206012040 P$=REP("",1,1)12050 GO TO 1202012060 S$=SEG(P$,LEN(P$),1)12070 IF S$<>" " THEN 1210012080 P$=REP("",LEN(P$),1)12090 GO TO 1206012100 RETURN 13000 REM*R Check_Filename(Q$,P0::P9)13010 E8=POS(Q$,".",1)13020 E8=E8+(LEN(Q$)+1)*(E8=0)13030 R$=SEG(Q$,1,E8-1)13040 GOSUB 1500013050 IF P9 OR E8>LEN(Q$) THEN 1308013060 R$=SEG(Q$,E8+1,LEN(Q$)-E8)13070 GOSUB 1400013080 RETURN 14000 REM*R Check_Extension(R$::P9)14010 IF LEN(R$)<5 THEN 1404014020 P9=114030 GO TO 1406014040 P0=114050 GOSUB 1500014060 RETURN 15000 REM*R Check_Name(R$,P0::P9)15010 IF R$<>"" THEN 1504015020 P9=NOT(P0)15030 GO TO 1516015040 IF LEN(R$)<11 THEN 1507015050 P9=115060 GO TO 1516015070 C8=015080 P9=015090 IF C8=>LEN(R$) OR P9 THEN 1516015100 C8=C8+115110 S$=SEG(R$,C8,1)15120 C9=POS("0123456789*?ABCDEFGHIJKLMNOPQRSTUVWXYZ",S$,1+10*(C8=1))15130 IF C9<>0 AND (S$<>"*" OR C8=LEN(R$)) THEN 1515015140 P9=115150 GO TO 1509015160 RETURN 16000 REM*R Check_4909_Name(P$::P9)16010 P9=P$=""16020 C8=016030 IF C8=>LEN(P$) OR P9 THEN 1609016040 C8=C8+116050 S$=SEG(P$,C8,1)16060 C9=POS("0123456789_$ABCDEFGHIJKLMNOPQRSTUVWXYZ",S$,1+12*(C8=1))16070 P9=C9=016080 GO TO 1603016090 RETURN 30000 REM*R Get_Option(::)30010 PRI "		4907 To 4909	File Transfer and Program Conversion"30020 PRINT "		UtilityJ_J_"30030 PRINT "This utility allows you to perform one of the following"30040 PRINT "operations on the files you will specify:J_"30050 PRI "   1. TRANSFERJ_Transfers specified files from the 4907";30060 PRINT " to the 4909."30070 PRI "J_   2. LISTJ_List all 4907-related statements and their sug";30080 PRINT "gested"30090 PRI "	4909 counterparts for the specified PROGRAM files."30100 PRI "J_   3. TRANSFER, LIST, and CONVERT	In addition to";30110 PRINT " TRANSFERring and LISTing (1 and 2 above),"30120 PRINT "	the transferred program files will have their"30130 PRI "	4907-related statements converted to 4909 stateme";30140 PRINT "nts.J_"30150 PRINT "J_Which operation do you want performed? (1, 2 or 3; de";30160 PRINT "fault 1): ";30170 P0=130180 P1=330190 P2=130200 GOSUB 700030210 IF P9 THEN 3015030220 C2=P330230 PRI "J_If you should wish to stop the execution of this program at"30240 PRINT "any time, press function key # 20. To restart the program,"30250 PRINT "use the AUTOLOAD key."30252 FOR I8=1 TO 5*(215+1725*(RND(0)>0.5))30254 NEXT I830260 RETURN 31000 REM*R Verify_Configuration(::)31010 PRINT "	       ** WARNING **J_"31020 PRI "If a ROM pack needs to be inserted or removed, the 4050 must"31030 PRI "be powered down while the change is made. Press the AUTOLOAD"31040 PRINT "key to restart this program after restoring power.J_J_J_"31050 PRINT "Please insure that a 4907 File Manager ROM pack has been"31060 PRI "inserted into the back of the 4050 Graphic Computing System"31070 PRINT "and that the 4050 is connected to the 4907 controller.J_"31080 IF C2<>2 THEN 3113031090 PRINT "If a 4909 File Management System is currently connected to"31100 PRI "the 4050, the GPIB address on the appropriate Host Interface"31110 PRINT "should be set to a value other than zero.J_"31120 GO TO 3117031130 PRI "Make sure that the 4050 is connected to a Host Interface on"31140 PRINT "the back of the 4909 and that the GPIB address on the Host"31150 PRINT "Interface is set to a value other than zero. The desired"31160 PRINT "destination media should be mounted on a 4909 drive.J_"31170 PRINT "Refer to the 4909 File Management System Operator's manual"31180 PRI "for instructions on how to set the Host Interface GPIB addr";31190 PRINT "ess.J_"31200 PRINT "If the 4909 File Manager ROM pack is currently inserted in"31210 PRINT "the 4050, it must be removed.J_"31220 PRINT "Press RETURN if the configuration is OK: ";31230 INPUT S$31235 IF C2=2 THEN 3132031240 PRI "J_Please enter the GPIB address selected on the 4909 Host In";31250 PRINT "terface   (1 - 30): ";31260 P0=131270 P1=3031280 P2=-1.0E+30031290 GOSUB 700031300 IF P9 THEN 3124031310 H=P331320 RETURN 32000 REM*R Set_Time_And_Date(::)32005 PAGE 32010 DELETE D$,P$,Q832012 DIM D$(210),P$(300)32014 DIM Q8(12)32016 RESTORE 3202032018 READ Q8,N$,E$32020 DATA 31,29,31,30,31,30,31,31,30,31,30,31," 0123456789"32022 DATA "JANFEBMARAPRMAYJUNJULAUGSEPOCTNOVDEC"32024 CALL "TIME",K$32026 IF K$="" THEN 3207432028 D$=SEG(K$,1,9)32030 T$=SEG(K$,11,8)32032 REM Convert to AM/PM32034 H8=VAL(T$)32036 IF H8>11 THEN 3204432038 H8=H8*(H8<>0)+12*(H8=0)32040 T$=T$&" AM"32042 GO TO 3205032044 H8=H8-1232046 H8=H8*(H8<>0)+12*(H8=0)32048 T$=T$&" PM"32050 P$=STR(H8+100)32052 P$=REP("",1,2)32054 T$=REP(P$,1,2)32056 PRINT "J_The current system date and time are ";D$;" and ";T$;32058 PRINT ", do youwant to change them (enter Yes or No and press ";32060 PRINT "RETURN; default No): ";32062 INPUT K$32064 IF POS("NO",K$,1)=1 THEN 3230432066 IF POS("YES",K$,1)=1 THEN 3207432068 PRINT "Invalid response; try again."32070 GO TO 3202432072 REM Process date32074 PRINT "J_Please enter the date and press the RETURN key"32076 PRINT "J_   (example: 29-JUN-79__ ___ __): ";32078 PRINT "__-___-__";32080 INPUT D$32082 D$=SEG(D$,1,9)32084 D$=D$&"         "32086 D$=SEG(D$,1,9)32088 D$=REP("-",3,1)32090 D$=REP("-",7,1)32092 R$=SEG(D$,1,2)32094 M$=SEG(D$,4,3)32096 L$=SEG(D$,8,2)32098 REM Check day32100 P$=SEG(R$,1,1)32102 Q$=SEG(R$,2,1)32104 IF POS(N$,P$,1)=0 OR POS(N$,Q$,1)=0 THEN 3211232106 R$=R$&" -1"32108 R8=VAL(R$)32110 IF R8>0 THEN 3212032112 PRINT "      The DAY is invalid.  It must be an integer ";32114 PRINT "between 1 and 31."32116 GO TO 3207432118 REM Check month32120 M8=(POS(E$,M$,1)-1)/3+132122 IF M8<>INT(M8) THEN 3213432124 IF R8<=Q8(M8) THEN 3214232126 M$=SEG(E$,3*M8-2,3)32128 PRINT "      The month of ";M$;" can have no more than ";Q8(M8);32130 PRINT " days in it."32132 GO TO 3207432134 PRI "      The MONTH is invalid.  The correct abbreviations are:"32136 PRINT "         JAN FEB MAR APR MAY JUN JUL AUG SEP OCT NOV DEC"32138 GO TO 3207432140 REM Check year32142 P$=SEG(L$,1,1)32144 Q$=SEG(L$,2,1)32146 IF POS(N$,P$,1)=0 OR POS(N$,Q$,1)=0 THEN 3215432148 L$=L$&" -1"32150 O8=VAL(L$)32152 IF O8=>79 AND O8<=99 OR (O8=>0 AND O8<=40) THEN 3216632154 PRINT "      The YEAR is invalid.  It must be an integer ";32156 PRINT "of the form"32158 PRINT "         80,81,...99,0,...40; representing the years ";32160 PRINT "1980 through 2040."32162 GO TO 3207432164 REM Check leap year32166 IF NOT(R8=29 AND M8=2 AND O8/4<>INT(O8/4)) THEN 3217432168 PRINT "      FEB can only have 29 days in a leap year."32170 GO TO 3207432172 REM Process time32174 PRINT "J_Please enter the time and press the RETURN key"32176 PRINT "J_   (example: 01:50:00 PM__ __ __ __): ";32178 PRINT "__:__:__ __";32180 INPUT T$32182 T$=SEG(T$,1,11)32184 T$=T$&"           "32186 T$=REP(":",3,1)32188 T$=REP(":",6,1)32190 H$=SEG(T$,1,2)32192 M$=SEG(T$,4,2)32194 S$=SEG(T$,7,2)32196 R$=SEG(T$,10,2)32198 T$=SEG(T$,1,8)32200 REM Check hours32202 P$=SEG(H$,1,1)32204 Q$=SEG(H$,2,1)32206 IF POS(N$,P$,1)=0 OR POS(N$,Q$,1)=0 THEN 3221432208 H$=H$&" -1"32210 H8=VAL(H$)32212 IF H8=>1 AND H8<=12 THEN 3222232214 PRINT "      The HOUR is invalid.  It must be an integer ";32216 PRINT "between 1 and 12."32218 GO TO 3217432220 REM Check minutes32222 P$=SEG(M$,1,1)32224 Q$=SEG(M$,2,1)32226 IF POS(N$,P$,1)=0 OR POS(N$,Q$,1)=0 THEN 3223432228 M$=M$&" -1"32230 M8=VAL(M$)32232 IF M8=>0 AND M8<=59 THEN 3224232234 PRINT "      The MINUTE is invalid.  It must be an integer ";32236 PRINT "between 0 and 59."32238 GO TO 3217432240 REM Check seconds32242 P$=SEG(S$,1,1)32244 Q$=SEG(S$,2,1)32246 IF POS(N$,P$,1)=0 OR POS(N$,Q$,1)=0 THEN 3225432248 S$=S$&" -1"32250 S8=VAL(S$)32252 IF S8=>0 AND S8<=59 THEN 3226232254 PRINT "      The SECOND is invalid.  It must be an integer ";32256 PRINT "between 0 and 59."32258 GO TO 3217432260 REM Process AM/PM32262 IF R$="AM" THEN 3227432264 IF R$="PM" THEN 3228032266 PRINT "      The AM/PM field is invalid.  It must be either ";32268 PRINT "AM or PM."32270 GO TO 3217432272 REM Adjust for AM32274 H8=H8*(H8<>12)32276 GO TO 3228232278 REM Adjust for PM32280 H8=H8*(H8<>12)+1232282 P$=STR(H8)32284 T$=REP(P$,1,2)32286 REM Set Time32288 P$=D$&"/"32290 P$=P$&T$32292 N8=POS(P$," ",1)32294 IF N8=0 THEN 3230032296 P$=REP("",N8,1)32298 GO TO 3229232300 P$=REP(" ",POS(P$,"/",1),1)32302 CALL "SETTIM",P$32304 DELETE D$,P$,Q832314 DIM P$(128)32320 REM*B Set 4909 Time32330 IF C2=2 THEN 3241032340 P$="RCLOCK"32350 GOSUB 10032360 M$=SEG(M$,POS(M$,"Date/time:",1)+10,18)32370 IF M$<>"00-   -00 00:00:01" THEN 3241032380 CALL "TIME",S$32390 P$="SCLOCK "&S$32400 GOSUB 10032410 RETURN 34000 REM*R Get_Destination(::)34010 IF C2=2 THEN 3505034015 PAGE 34017 P$="CLOSE LFN:ALL"34019 GOSUB 50034050 F8=034060 IF F8 THEN 3453034070 F9=034080 IF F9 THEN 3432034090 P9=134092 P$="STATUS UNIT:ALL"34094 GOSUB 10034096 U8=VAL(M$)34100 IF NOT(P9) THEN 3420034110 PRINT "J_The destination of the 4907 files you wish to process";34120 PRINT " may bespecified by volume name or unit number. Please";34130 PRINT " enter the volumename or unit number to indicate where";34140 PRINT " files will be stored.(Name or Number; default ";U8;34150 PRINT ", fixed disk): ";34160 GOSUB 900034170 IF P$="" OR POS(P$,"UNIT:",1)<>1 THEN 3419034180 U8=VAL(P$)34190 GO TO 3410034200 N$=P$34202 IF N$<>"" THEN 3421034204 S$=STR(U8)34206 N$="UNIT:"&S$34210 P$="IDENTIFY  []"34220 P$=REP(N$,10,0)34230 GOSUB 10034240 P$="DIRECTORY A"34250 GOSUB 50034270 F9=E1<>E0(3) AND E1<>E0(4)34280 IF F9 THEN 3430034290 PRINT "J_";N$;" was not found."34300 GO TO 3408034320 S8=E1<>E0(1) AND E1<>E0(2) AND E1<>E0(9)34325 IF S8 AND E1<>E0(10) AND E1<>E0(11) THEN 3450034330 P9=134340 IF NOT(P9) THEN 3445034350 PRINT "J_Unit ";U8;" is not formatted. If you wish, this program";34360 PRINT " will formatunit ";U8;" and create an unnamed volume";34370 PRINT " which requires no password andhas only a public";34380 PRINT " directory. If you do not wish to format unit ";U8;34390 PRINT ",you will be asked to specify a new destination unit or";34400 PRINT " volume. Do youwish to format unit ";U8;"? (Yes or No;";34410 PRINT " default Yes): ";34420 P0=134430 GOSUB 800034440 GO TO 3434034450 IF P1<>1 THEN 3451034460 P$="FORMAT "&N$34470 GOSUB 50034473 IF E1<>E0(6) THEN 3448034474 PRINT "J_The disk is write-protected. Please remove the";34475 PRINT " write-protect andpress RETURN: ";34476 INPUT S$34477 GO TO 3446034480 IF E1=E0(6) OR E1=0 THEN 3448534482 GOSUB 100034485 F8=134490 GO TO 3505034500 F8=134510 GO TO 3406034530 IF E1=E0(9) OR E1=E0(10) OR E1=E0(11) THEN 3505034540 F8=034550 IF F8 THEN 3505034560 P9=134570 IF NOT(P9) THEN 3477034580 PRINT "J_Enter the name of an existing user directory in which";34590 PRINT " to place thefiles. Each disk is normally provided with";34600 PRINT " a public directory; thepublic directory has no name and";34610 PRINT " can be selected by simply pressingRETURN. (default is";34620 PRINT " the public directory): ";34630 GOSUB 1200034640 GOSUB 1600034650 P9=P$<>"" AND (LEN(P$)>10 OR P9)34655 D$=P$34660 GO TO 3457034770 P9=134780 IF NOT(P9) THEN 3486034790 PRINT "J_What is the password for this directory? A password is";34800 PRINT " not alwaysrequired; if none exists simply press RETURN.";34810 PRINT "(default is no password): ";34820 GOSUB 1200034830 GOSUB 1600034840 P9=P$<>"" AND (LEN(P$)>10 OR P9)34850 GO TO 3478034860 REM                                            P$="IDENTIFY [:"&P$34861 REM*B The next 3 lines are a temporary change, and should be34862 REM replaced by the above line.34863 IF P$="" THEN 3486634864 P$=":"&P$34866 P$="IDENTIFY  ["&P$34870 P$=REP(D$,12,0)34880 P$=P$&"]"34885 P$=REP(N$,10,0)34890 GOSUB 10034900 SET NOKEY 34905 P$="OPEN TESTFILE LFN:1 NEW TYPE:DIRECT"34910 GOSUB 50034930 F8=E1<>E0(5) AND E1<>E0(8)34932 F9=E1=E0(7)34940 IF F8 THEN 3502034950 PRINT "J_The user directory/password given does not exist."34960 GO TO 3504035020 P$="CLOSE LFN:1"35030 GOSUB 50035032 IF F9 THEN 3504035034 P$="DELETE TESTFILE NINQ"35036 GOSUB 50035040 SET KEY 35045 GO TO 3455035050 RETURN 36000 REM*R Get Source(::)36005 PAGE 36010 P9=136020 IF NOT(P9) THEN 3611036030 PRINT "J_Please insert the desired disk into a 4907 disk drive";36040 PRINT " and enter theselected drive number (0 - 3; default";36050 PRINT " 0): ";36060 P0=036070 P1=336080 P2=036090 GOSUB 700036100 GO TO 3602036110 F1=P336120 CALL "unit",F136130 CALL "mount",F1,T$36140 IF POS(T$,"WRITE PROTECTED",186)=0 THEN 3619036150 PRINT "J_Unit ";F1;" is write-protected. Please remove the";36160 PRINT " write-protectand press RETURN: ";36170 INPUT S$36180 GO TO 3613036190 CALL "file",F1,"@C49074909#",T$36200 IF T$="" THEN 3634036210 P9=136220 IF NOT(P9) THEN 3629036230 PRINT "J_Library C49074909, which is reserved for this program's";36240 PRINT " use, existson this disk. The program cannot proceed";36250 PRINT " unless the library isdeleted. Can the library and all";36260 PRINT " files in it be deleted?(Yes or No; default No): ";36270 P0=036280 GOSUB 800036285 GO TO 3622036290 IF P1=1 THEN 3632036300 PRINT "Program terminated."36310 END 36320 KILL "@C49074909#"36330 S1=136340 RETURN 37000 REM*R Create_List_Of_File_Names(::)65000 REM*R Driver65002 REM APPEND Point65004 GOSUB 500065006 ON SRQ THEN 150065008 GOSUB 600065010 DELETE 5001,6499965012 FIND 465013 M9=MEMORY65014 APPEND 500065015 IF C2=1 THEN 6502065016 SAVE "@C49074909/APP1";1,6500065018 SAVE "@C49074909/APP2";65000,6500265020 OPEN "@C49074909/FILELIST";3,"R",S$65021 ON SRQ THEN 150065022 CALL "time",P$65023 P$="J_               Listing generated on "&P$65024 GOSUB 650065025 GOSUB 300065026 IF F$=" " THEN 6504665028 REM WHILE 4907_Filename$<>""65038 GOSUB 6520065040 GOSUB 300065042 REM ENDWHILE65044 GO TO 6502665046 GOSUB 500065048 END 65200 REM*R Transfer_List_Convert(::)65202 GOSUB 550065204 IF P0<=0 THEN 6523065206 GOSUB 600065208 T6=P065209 C3=C3+165210 S$=STR(C3)65211 S$=" "&S$65212 S$=SEG(S$,LEN(S$)-2,3)65213 P$="J_J_J_*****> ) 4907: "&F$65214 P$=REP(S$,11,0)65215 GOSUB 650065216 IF C2=2 THEN 6522265218 P$="*****>      4909: "&H$65220 GOSUB 650065222 IF T6>2 OR C2=1 THEN 6522665224 GOSUB 6525065226 IF C2=2 THEN 6523065228 GOSUB T6 OF 10000,10000,10500,11000,1150065230 RETURN 65250 REM*R List_Convert_A_File(P0::)65252 IF P0<>2 THEN 6525865254 GOSUB 3000065256 GO TO 6527665258 IF P0<>1 THEN 6527665260 GOSUB 6530065262 IF P9=1 THEN 6527065264 GOSUB 3000065266 GOSUB 6535065268 GO TO 6527665270 P$=F$&" must be manually changed to ASCII"65272 P$="J_File "&P$65274 GOSUB 650065276 RETURN 65300 REM*R Change_HB_To_Ascii(::P9)65302 GOSUB 4700065304 IF P9 THEN 6533065306 SET NOKEY 65308 OFF SRQ 65310 DELETE 1,6499965311 M9=MEMORY65312 APPEND F$;65000,065314 F$="@C49074909/TEMP1"65316 KILL F$65318 SAVE F$,"A";1,6499965320 GOSUB 6540065330 RETURN 65350 REM*R Change_Ascii_To_HB(::)65352 SET NOKEY 65354 OFF SRQ 65356 DELETE 1,6499965358 APPEND F$,"A";65000,065360 F$="@C49074909/TEMP1"65362 KILL F$65364 SAVE F$;1,6499965366 GOSUB 6540065368 RETURN 65400 REM*R Restore_Program(::)65402 DELETE 1,6499965403 M9=MEMORY65404 APPEND "@C49074909/APP2";65002,065406 APPEND "@C49074909/APP1";65000,065408 ON SRQ THEN 150065410 SET KEY 65412 RETURN 