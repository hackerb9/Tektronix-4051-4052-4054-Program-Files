94 REM *************************************************95 REM *** 51/00-9527/0                              ***96 REM *** 3D-TRANSFORMATION USING                   ***97 REM *** HOMOGENEOUS COORDINATES                   ***98 REM *** GEORGE E. HECKLER, IDAHO STATE UNIVERSITY ***99 REM *************************************************100 REM TO ILLUSTRATE 3D-TRANSFORMATIONS USING HOMOGENEOUS COORDS110 REM SEE "COMPUTER GRAPHICS" BY ROGERS AND ADAMS, CHAPT 3120 REM PROGRAMMER: G. HECKLER, IDAHO STATE UNIV130 REM TO CHANGE BOX A AFTER RUN, TYPE A,CR,AND CHANGE RELATED140 REM VALUES IN 220 ACCORDING TO READ IN 210 AND 230200 INIT 210 DELETE A,O,E,L,Q,X1,X2,Y1,Y2220 DIM O(8,4),P(3),H(8),N(8)230 DIM A(8,4),B(8,4),C(4),D(8,4)240 RESTORE 250 A=0260 FOR I=1 TO 8270 READ A(I,4)280 DATA 1,1,1,1,1,1,1,1290 NEXT I300 DATA 3,3,0.5,0.5310 READ A(1,1),A(2,1),A(2,2),A(3,2)320 DATA 3,2,3,0.5,2,0.5,2,2330 READ A(6,1),A(6,3),A(7,1),A(7,2),A(7,3),A(8,2),A(8,3),A(5,3)340 DIM E(3),L(3)350 PRINT "ENTER EYE POSITION ,E(X,Y,Z), AND POINT TO BE LOOKED"360 PRINT "AT,L(X,Y,Z), IN DATA STATEMENT 420  FOR THIS FIGURE"370 PRINT "HAS THIS BEEN DONE YET? 1=YES, 2=NO"380 INPUT N1390 IF N1=1 THEN 420400 PRINT "DO THIS THEN RUN AGAIN"410 END 420 DATA -5,7,7,1.3,1,0.8430 RESTORE 420440 READ E(1),E(2),E(3),L(1),L(2),L(3)450 DIM M(4,4)460 REM FILL TRANSFORM MATRIX 470 PRINT "ENTER TRANSFORM MATRIX (4*4) IN DATA STATEMENT"480 PRINT "570, 580, 590, 600  ROW BY ROW"490 PRINT "HAS THIS BEEN DONE? 1=YES; 2=NO"500 INPUT N2510 IF N2=1 THEN 540520 PRINT "ENTER M NOW AND RUN AGAIN."530 END 540 PAGE 550 FOR M1=1 TO 4560 FOR M2=1 TO 4570 DATA -1,0,0,0580 DATA -1,1,0,0590 DATA 0,-2,-1,0600 DATA 0,0,0,1610 READ M(M1,M2)620 NEXT M2630 NEXT M1640 O=A650 GOSUB 2120660 REM ASSIGN 3D PARAMETERS FOR WINDOW670 GOSUB 2600680 GOSUB 2310690 VIEWPORT 10,65,10,65700 GOSUB 2510710 REM DRAW FIGURE720 GOSUB 1820730 REM TRANSFORM FIGURE740 GOSUB 1650750 O=B760 GOSUB 2120770 REM ASSIGN 3D PARAMETERS FOR WINDOW780 GOSUB 2600790 GOSUB 2310800 VIEWPORT 70,125,12,67810 GOSUB 2510820 REM DRAW FIGURE830 GOSUB 1820840 REM PRINT TRANSFORM MATRIX850 HOME 860 PRINT USING 900:M(1,1),M(1,2),M(1,3),M(1,4)870 PRINT USING 900:M(2,1),M(2,2),M(2,3),M(2,4)880 PRINT USING 900:M(3,1),M(3,2),M(3,3),M(3,4)890 PRINT USING 900:M(4,1),M(4,2),M(4,3),M(4,4)900 IMAGE 24T,4(2D.2D,X)910 HOME 920 PRINT USING " /,3T,""D=A*M""":930 PRINT USING "20T,""M=""":940 PRINT USING """B(K)=D(K)/D(K,4)"",50T,""o - LABELED CORNER""":950 PRINT USING "2/ ,20T,""A"",53T,""B""":960 PRINT USING 970:A(7,1),A(7,2),A(7,3),B(7,1),B(7,2),B(7,3)970 IMAGE       16T,3(2D.2D,X),49T,3(2D.2D,X)980 PRINT USING "  11T,""o is
"",44T,""o is
""":990 HOME 1000 END 1010 REM DRAW AXES1020 P(1)=01030 P(2)=01040 P(3)=01050 GOSUB 31701060 MOVE X,Y1070 GIN A1,A21080 IF ABS(Q(1,3))>Q(2,3) THEN 11101090 A3=Q(2,3)1100 GO TO 11201110 A3=Q(1,3)1120 P6=A3/101130 P7=A3+5*P61140 FOR P8=0 TO P7 STEP P61150 P(3)=P81160 GOSUB 31701170 MOVE X,Y1180 DRAW X,Y1190 NEXT P81200 IF A3>0 THEN 12301210 PRINT "
-z"1220 GO TO 12401230 PRINT "z"1240 MOVE A1,A21250 REM DRAW X AXIS1260 P(2)=01270 P(3)=01280 IF ABS(Q(1,1))>Q(2,1) THEN 13101290 A4=Q(2,1)1300 GO TO 13201310 A4=Q(1,1)1320 P1=A4/101330 P5=A4+5*P11340 FOR P2=0 TO P5 STEP P11350 P(1)=P21360 GOSUB 31701370 MOVE X,Y1380 DRAW X,Y1390 NEXT P21400 IF A4>0 THEN 14301410 PRINT "
-x"1420 GO TO 14401430 PRINT "x"1440 REM DRAW Y AXIS1450 MOVE A1,A21460 P(1)=01470 P(3)=01480 IF ABS(Q(1,2))>Q(2,2) THEN 15101490 A5=Q(2,2)1500 GO TO 15201510 A5=Q(1,2)1520 P3=A5/101530 P9=A5+5*P31540 FOR P4=0 TO P9 STEP P31550 P(2)=P41560 GOSUB 31701570 MOVE X,Y1580 DRAW X,Y1590 NEXT P41600 IF A5>0 THEN 16301610 PRINT "-y"1620 GO TO 16401630 PRINT "y"1640 RETURN 1650 REM ***1660 FOR I4=1 TO 81670 FOR J4=1 TO 41680 D(I4,J4)=01690 FOR K4=1 TO 41700 C1=A(I4,K4)*M(K4,J4)1710 D(I4,J4)=D(I4,J4)+C11720 NEXT K41730 NEXT J41740 NEXT I41750 FOR K1=1 TO 81760 FOR L1=1 TO 41770 C(L1)=D(K1,L1)/D(K1,4)1780 B(K1,L1)=C(L1)1790 NEXT L11800 NEXT K11810 RETURN 1820 REM MOV TO FIRST PT1830 P(1)=O(1,1)1840 P(2)=O(1,2)1850 P(3)=O(1,3)1860 GOSUB 31701870 MOVE X,Y1880 H(1)=X1890 N(1)=Y1900 REM DRAW OBJECT1910 FOR I=2 TO 81920 P(1)=O(I,1)1930 P(2)=O(I,2)1940 P(3)=O(I,3)1950 GOSUB 31701960 DRAW X,Y1970 H(I)=X1980 N(I)=Y1990 NEXT I2000 MOVE H(4),N(4)2010 DRAW H(1),N(1)2020 DRAW H(6),N(6)2030 MOVE H(5),N(5)2040 DRAW H(8),N(8)2050 DRAW H(3),N(3)2060 MOVE H(2),N(2)2070 DRAW H(7),N(7)2080 MOVE H(7),N(7)2090 PRINT "o";2100 HOME 2110 RETURN 2120 REM ***2130 DIM Q(2,3)2140 REM FIND MIN AND MAX OF 3D DATA2150 DATA -1.0E+300,-1.0E+300,-1.0E+3002160 RESTORE 21502170 READ Q(2,1),Q(2,2),Q(2,3)2180 DATA 1.0E+300,1.0E+300,1.0E+3002190 READ Q(1,1),Q(1,2),Q(1,3)2200 FOR I=1 TO 82210 FOR J=1 TO 32220 Q(1,J)=Q(1,J) MIN O(I,J)2230 Q(1,J)=Q(1,J) MIN 02240 Q(2,J)=Q(2,J) MAX O(I,J)2250 Q(2,J)=Q(2,J) MAX 02260 NEXT J2270 NEXT I2280 RETURN 2290 REM ***2300 REM ***********************2310 REM FIND MIN AND MAX IN VIEPLANE'S COORD SYSTEM2320 DATA 1.0E+300,-1.0E+300,1.0E+300,-1.0E+3002330 RESTORE 23202340 READ X1,X2,Y1,Y22350 FOR I2=1 TO 22360 FOR J2=1 TO 22370 FOR K2=1 TO 22380 P(1)=Q(I2,1)2390 P(2)=Q(J2,2)2400 P(3)=Q(K2,3)2410 GOSUB 31702420 X1=X1 MIN X2430 X2=X2 MAX X2440 Y1=Y1 MIN Y2450 Y2=Y2 MAX Y2460 NEXT K22470 NEXT J22480 NEXT I22490 RETURN 2500 REM ***2510 REM SET UP 2D WIN2520 IF (X2-X1)/(Y2-Y1)>1 THEN 25502530 WINDOW (X2+X1)*0.5-(Y2-Y1),(X2+X1)*0.5+(Y2-Y1),Y1,Y22540 GO TO 25702550 WINDOW X1,X2,(Y2+Y1)*0.5-(X2-X1)/2,(Y2+Y1)*0.5+(X2-X1)/22560 REM ************************2570 GOSUB 10102580 RETURN 2590 REM ***2600 REM 3D TO 2D PERSPECTIVE INITIALIZATION2610 REM MUXT BE RUN BEFORE USING TRANSFORM ROUTINE AT 31702620 REM   PURPOSE: 1. FIND LOCATION AND ORIENTATION OF VIEPLANE2630 REM            2. DEFINE 2D COORD SYSTEM ON VIEPLANE2640 REM E IS VIEWER'S EYE LOCATION IN 3 SPACE2650 REM L IS 3 SPACE PT BEING LOOKED AT BY VIEWER'S EYE2660 DELETE T1,T2,T3,T4,T52670 DIM T1(3),T2(3),T3(3),T4(3),T5(3)2680 IF E(1)<>L(1) OR E(2)<>L(2) THEN 27202690 PRINT "E AND L LIE IN SAME VERTICAL LINE"2700 PRINT "PLEASE CHANGE ONE OF  THE FOLLOWING: E(1),E(2),L(1) OR L(2)"2710 END 2720 REM2730 T3=E-L2740 REM T3 IS NOW VECTOR FROM L TO E2750 T7=02760 FOR T9=1 TO 32770 T7=T7+T3(T9)^22780 NEXT T92790 T7=SQR(T7)2800 REM T7 IS NOW DISTANCE FROM LTOE2810 T2=T3/T72820 REM T2 CONTAINS DIR COS'S OF NORMAL VECTOR TO VIEPLANE2830 REM2840 REM PLACE VIEPLANE HALF WAY VETWEEN E AND L2850 T6=T7/22860 REM T6 IS DISTANCE FROM E TO VIEPLANE2870 T3=T3*(T6/T7)2880 T1=E-T32890 REM T1 IS THE INTERSECTION OF VIEPLANE AND LINE FROM E TO L2900 REM DEFINE T1 TO BE ORIGIN OF VIEPLANE'S 2D COORD SYSTEM2910 REM2920 REM     NOW DEFINE "UP"IN VIEPLANEJ'S 2D COORD SYSTEM2930 T3=L2940 T3(3)=T3(3)+12950 REM T3 IS NOW THE ENDPT OF THE VECTOR(0,0,1)RELATIVE TO L2960 REM PROJECT ONTO VIE PLANE2970 GOSUB 33402980 REM T3 IS NOW 3 SPACE PT DEFINED O BE "ABOVE" PLANE'S ORIGIN 2990 REM3000 T7=03010 FOR T9=1 TO 33020 T7=T7+(T3(T9)-T1(T9))^23030 NEXT T93040 T7=SQR(T7)3050 REM T7 IS NOW DISTANCE FROM T1 TO T33060 REM3070 T3=T3-T13080 T5=T3/T73090 REM T5 NOW CONTAINS DIRECTION COSINES OF VIEPLANE'S "VERTICAL"3100 REM CROSS PRODUCT WITH VIEPLANE'S NORMAL VECTOR IS "HORIZONTAL"3110 T4(1)=T5(2)*T2(3)-T5(3)*T2(2)3120 T4(2)=T5(3)*T2(1)-T5(1)*T2(3)3130 T4(3)=T5(1)*T2(2)-T5(2)*T2(1)3140 REM T4 CONTAINS DIR COS'S OF VIEPLANE'S "HORIXONTAL"3150 RETURN 3160 REM3170 REM ENTRY PT FOR 3D TO 2D TRANSFORM3180 REM P CONTAINS 3 SPACE COORD'S OF PT3190 REM TO BE TRANSFORMED TO 2D COORD'S OF VIEPLANE3200 T3=P3210 REM PROJECT INPUT PT ONTO VIEPLANE3220 GOSUB 33403230 REM3240 REM COMPUTE 2D COORD'S OF PROJECTED PT3250 X=03260 Y=03270 FOR T9=1 TO 33280 X=X+(T3(T9)-T1(T9))*T4(T9)3290 Y=Y+(T3(T9)-T1(T9))*T5(T9)3300 NEXT T93310 RETURN 3320 REM INTERNAL ROUTINE;  FIND 3 SPACE PT WHERE LINE FROM3330 REM     T3 TO E INTERSECTS VIEPLANE3340 T7=03350 T8=03360 FOR T9=1 TO 33370 T7=T7+(T1(T9)-T3(T9))*T2(T9)3380 T8=T8+(E(T9)-T3(T9))*T2(T9)3390 NEXT T93400 IF T8>0 THEN 34303410 PRINT "E IS TOO CLOSE TO POINT BEING VIEWED"3420 END 3430 T7=T7/T83440 FOR T9=1 TO 33450 T3(T9)=(E(T9)-T3(T9))*T7+T3(T9)3460 NEXT T93470 RETURN 