1 REM GPIB GENERAL DEVICE EXERCISER for TEKTRONIX APPLICATIONS LIBRARY.2 REM ORIGINAL: 3-19-79;  BY: JOHN BURGESS, AICE GROUP, TEKTRONIX3 GO TO 1004 REM  *--*  WARM RE-START5 ON SRQ THEN 60006 GO TO 10008 REM *--*  SEND 'TAG nn'9 GOSUB 235010 RETURN 12 REM *--*  SEND 'LAG nn'13 GOSUB 230014 RETURN 16 REM *--*  SEND 'DCL'17 GOSUB 221018 RETURN 20 REM *--*  SEND 'GTL'21 GOSUB 200522 RETURN 24 REM *--*  RECEIVE INFO25 GOSUB 500026 RETURN 28 REM *--*  SET UP ASCII DISPLAY MODE29 GOSUB 250530 RETURN 32 REM *--*  POLL CURRENTLY ACTIVE DEVICE33 GOSUB 605034 RETURN 36 REM *--*  SEND 'GET'37 GOSUB 212038 RETURN 40 REM *--*  REPEAT PREVIOUS COMMAND     42 GO TO 106044 REM *--*  END PROGRAM45 GO TO 100048 REM *--*  SEND 'UNT'49 GOSUB 243550 RETURN 52 REM *--*  SEND 'UNL'53 GOSUB 240054 RETURN 56 REM *--*  SEND 'SDC'57 GOSUB 205558 RETURN 60 REM *--*  SEND 'LLO'61 GOSUB 218562 RETURN 64 REM *--*  SET UP DECIMAL DISPLAY MODE65 GOSUB 248566 RETURN 68 REM *--*  SET UP TO PRINT CTRL CHARACTERS69 GOSUB 252570 RETURN 72 REM *--*  CHANGE COMMUNICATION PROTOCOL73 GOSUB 900074 RETURN 76 REM *--*  CHANGE DEVICE LIST77 GOSUB 300078 RETURN 80 REM *--*  LIST MAIN FEATURE SUMMARY81 GOSUB 774082 RETURN 100 REM110 REM LAST UPDATE BY: JOHN BURGESS;     DATE: 11-12-82120 REM130 REM THE {PRINT "";} STATEMENTS BEFORE {WBYTE ...} STATEMENTS ARE140 REM TO COMPENSATE FOR A 4051 BUG.  DO NOT REMOVE !!!!150 REM160 REM IN MANY CASES THROUGHOUT THIS PROGRAM, REMARK STATEMENTS ARE170 REM USED AS TARGET LINES FOR BRANCHES; DON'T ARBITRARILY REMOVE180 REM REMARK STATEMENTS. 190 REM200 REM *--*--*--*--*--*--*  INITIALIZE THINGS  *--*--*--*--*--*--*210 INIT 220 DIM B1(8),T0(15),I$(75),X$(75),D1(1),D2(1)230 REM SET UP TERMINATION PARAMETERS TO "DEF" SUBSET240 RESTORE 9460250 READ T0260 REM D0 IS CURRENT ACTIVE DEVICE; N0 IS NUMBER OF DEVICES AVAILABLE270 D0=1280 N0=1290 REM D1(n) IS PRIMARY ADDRESS; D2(n) IS SECONDARY ADDRESS.300 D1(D0)=1310 D2(D0)=32320 REM M0=0 (DEFAULT) UNLISTENS AND UNTALKS THE BUS AFTER A SERIAL330 REM POLL; M0=1 ENABLES ADDRESSED-STATUS RESTORATION AFTER A POLL.340 M0=0350 REM M1=0 MEANS IDLE; M1=1 MEANS LISTENER; M1=2 MEANS TALKER.360 M1=0370 ON SRQ THEN 6000380 REM C TELLS HOW MANY COMMANDS ARE AVAILABLE390 REM SET UP COMMAND STRING (C$) -- GPIB & PROG CONTROL400 C=29410 DIM C$(C*4)420 C$=""430 C$=C$&"	GTL	SDC	PPC	GET	TCT	LLO	DCL	PPU	SPE	SPD	MLA"440 C$=C$&"	MTA	UNL	UNT	IFC	DEC	ASC	PCN	ASR	DEV	REC	POL"450 C$=C$&"	DIR	TRM	DEF	LF 	EOI	UDF	END"460 REM SET UP ASCII CONTROL CHARACTER NAMES470 DIM A$(33*4)480 A$=""490 A$=A$&"NUL SOH STX ETX EOT ENQ ACK BEL BS  HT  LF  "500 A$=A$&"VT  FF  CR  SO  SI  DLE DC1 DC2 DC3 DC4 NAK "510 A$=A$&"SYN ETB CAN EM  SUB ESC FS  GS  RS  US  SP  "520 PAGE 530 LIST 1540 PRINT "DO YOU NEED INSTRUCTIONS (Y OR N_): ";550 INPUT T$560 IF T$<>"Y" THEN 580570 GOSUB 7000580 GOSUB 3000590 GOSUB 9000600 GOSUB 25251000 REM *--*--*--*--*--*--*  GET COMMAND  *--*--*--*--*--*--*1010 PRINT "COMMAND: ";1020 SET KEY 1030 INPUT X$1040 IF LEN(X$)=0 THEN 10001050 IF X$<>"	RPC" THEN 10901060 REM *--*  REPEAT PREVIOUS COMMAND AGAIN ENTERS HERE1070 PRINT "	SENDING <";I$;">"1080 GO TO 11001090 I$=X$1100 REM A PROGRAM CONTROL OR INTERFACE COMMAND IS PREFIXED WITH CTRL-I1110 IF ASC(I$)=9 THEN 11801120 REM SEND STRING TO DEVICE AND GET RESPONSE (IF NECESSARY)1130 GOSUB 40001140 REM DELETE THE NEXT 2 LINES IF THE AUTO RESPONSE IS UNWANTED1150 IF POS(I$,"?",1)=0 THEN 10001160 GOSUB 50001170 GO TO 10001180 REM HANDLE A PROGRAM CONTROL OR INTERFACE COMMAND1190 REM SEE IF PRINCIPAL DEVICE WAS CHANGED1200 T$=SEG(I$,2,1)1210 IF T$<"0" OR T$>"9" THEN 12801220 T=VAL(T$)1230 IF T=>1 AND T<=N0 THEN 12601240 PRINT "
ILLEGAL DEVICE REQUESTED.  ""	DEV"" OR UDK #19 TO REVIEW."1250 GO TO 10001260 D0=T1270 GO TO 10001280 T=POS(C$,I$,1)1290 IF T=0 OR LEN(I$)>4 THEN 13701300 REM IF IT GETS HERE, IT'S A PROGRAM CONTROL OR INTERFACE COMMAND1310 T=(T-1)/4+11320 IF INT(T)<>T OR T<1 OR T>C THEN 13701330 GOSUB T OF 2005,2055,2105,2120,2170,2185,2210,2235,2250,22751340 GOSUB T-10 OF 2300,2350,2400,2435,2470,2485,2505,2525,2545,30001350 GOSUB T-20 OF 5000,6050,7740,9000,9470,9540,9610,9670,100001360 GO TO 10001370 PRINT "
ILLEGAL COMMAND --- TRY AGAIN"1380 GO TO 10002000 REM *--*--*--*--*--*--*  INTERFACE COMANDS  *--*--*--*--*--*--*2005 REM *--*--*  SEND "LAG nn, [SCG mm], GTL" GPIB COMMAND  *--*--*2010 PRINT "";2015 IF D2(D0)<>32 THEN 20352020 WBYTE @32+D1(D0),1:2025 PRINT "	<LAG ";D1(D0);", GTL> SENT"2030 GO TO 20452035 WBYTE @32+D1(D0),96+D2(D0),1:2040 PRINT "	<LAG ";D1(D0);"; SCG ";D2(D0);", GTL> SENT"2045 M1=12050 RETURN 2055 REM *--*--*  SEND "LAG nn, [SCG mm], SDC" GPIB COMMAND  *--*--*2060 PRINT "";2065 IF D2(D0)<>32 THEN 20852070 WBYTE @32+D1(D0),4:2075 PRINT "	<LAG ";D1(D0);", SDC> SENT"2080 GO TO 20952085 WBYTE @32+D1(D0),96+D2(D0),4:2090 PRINT "	<LAG ";D1(D0);"; SCG ";D2(D0);", SDC> SENT"2095 M1=12100 RETURN 2105 REM *--*--*--*--*--*  SEND "PPC" GPIB COMMAND  *--*--*--*--*--*2110 PRINT "	<PARALLEL POLL CONFIGURE> NOT IMPLEMENTED."2115 RETURN 2120 REM *--*--*  SEND "LAG nn, [SCG mm], GET" GPIB COMMAND  *--*--*2125 PRINT "";2130 IF D2(D0)<>32 THEN 21502135 WBYTE @32+D1(D0),8:2140 PRINT "	<LAG ";D1(D0);", GET> SENT"2145 GO TO 21602150 WBYTE @32+D1(D0),96+D2(D0),8:2155 PRINT "	<LAG ";D1(D0);"; SCG ";D2(D0);", GET> SENT"2160 M1=12165 RETURN 2170 REM *--*--*--*--*--*  SEND "TCT" GPIB COMMAND  *--*--*--*--*--*2175 PRINT "	<TAKE CONTROL> NOT IMPLEMEMTED."2180 RETURN 2185 REM *--*--*--*--*--*  SEND "LLO" GPIB COMMAND  *--*--*--*--*--*2190 PRINT "";2195 WBYTE @17:2200 PRINT "	<LLO> SENT"2205 RETURN 2210 REM *--*--*--*--*--*  SEND "DCL" GPIB COMMAND  *--*--*--*--*--*2215 PRINT "";2220 WBYTE @20:2225 PRINT "	<DCL> SENT"2230 RETURN 2235 REM *--*--*--*--*--*  SEND "PPU" GPIB COMMAND  *--*--*--*--*--*2240 PRINT "	<PARALLEL POLL UNCONFIGURE> NOT IMPLEMENTED."2245 RETURN 2250 REM *--*--*--*--*--*  SEND "SPE" GPIB COMMAND  *--*--*--*--*--*2255 PRINT "";2260 WBYTE @24:2265 PRINT "	<SPE> SENT"2270 RETURN 2275 REM *--*--*--*--*--*  SEND "SPD" GPIB COMMAND  *--*--*--*--*--*2280 PRINT "";2285 WBYTE @25:2290 PRINT "	<SPD> SENT"2295 RETURN 2300 REM *--*--*--*  SEND "LAG nn, [SCG mm]" GPIB COMMAND  *--*--*--*2305 PRINT "";2310 IF D2(D0)<>32 THEN 23302315 WBYTE @32+D1(D0):2320 PRINT "	<LAG ";D1(D0);"> SENT"2325 GO TO 23402330 WBYTE @32+D1(D0),96+D2(D0):2335 PRINT "	<LAG ";D1(D0);"; SCG ";D2(D0);"> SENT"2340 M1=12345 RETURN 2350 REM *--*--*--*  SEND "TAG nn, [SCG mm]" GPIB COMMAND  *--*--*--*2355 PRINT "";2360 IF D2(D0)<>32 THEN 23802365 WBYTE @64+D1(D0):2370 PRINT "	<TAG ";D1(D0);"> SENT"2375 GO TO 23902380 WBYTE @64+D1(D0),96+D2(D0):2385 PRINT "	<TAG ";D1(D0);"; SCG ";D2(D0);"> SENT"2390 M1=22395 RETURN 2400 REM *--*--*--*--*--*  SEND "UNL" GPIB COMMAND  *--*--*--*--*--*2405 PRINT "";2410 WBYTE @63:2415 PRINT "	<UNL> SENT"2420 IF M1=2 THEN 24302425 M1=02430 RETURN 2435 REM *--*--*--*--*--*  SEND "UNT" GPIB COMMAND  *--*--*--*--*--*2440 PRINT "";2445 WBYTE @95:2450 PRINT "	<UNT> SENT"2455 IF M1=1 THEN 24652460 M1=02465 RETURN 2470 REM *--*--*--*--*--*  SEND "IFC" GPIB COMMAND  *--*--*--*--*--*2475 PRINT "	<IFC> NOT IMPLEMENTED."2480 RETURN 2485 REM *--*--*--*--*  SET UP "DECIMAL" DISPLAY MODE  *--*--*--*--*2490 M=12495 PRINT "	DEVICE RESPONSES DISPLAYED IN DECIMAL"2500 RETURN 2505 REM *  SET UP "ASCII" (ACTIVE CONTROL CHARACTERS) DISPLAY MODE  *2510 M=22515 PRINT "	ASCII DISPLAY WITH ACTIVE CONTROL CHARACTERS SELECTED"2520 RETURN 2525 REM *  SET UP "ASCII" (PRINTED CONTROL CHARACTERS) DISPLAY MODE  *2530 M=32535 PRINT "	ASCII DISPLAY WITH PRINTED CONTROL CHARACTERS"2540 RETURN 2545 REM *--*--*  TOGGLE "ADDRESSED STATUS RESTORATION" MODE  *--*--*2550 M0=1-M02555 PRINT "	AFTER A POLL THE ADDRESSED STATUS WILL ";2560 IF M0=1 THEN 25702565 PRINT "NOT ";2570 PRINT "BE RESTORED"2575 RETURN 3000 REM *--*--*--*--*--*--*  DISPLAY DEVICE LIST  *--*--*--*--*--*--*3010 PRINT "FOLLOWING IS A LIST OF AVAILABLE DEVICES, AND THE"3020 PRINT "CURRENTLY SELECTED ACTIVE DEVICE:

"3030 IF N0>0 THEN 30603040 PRINT "THERE ARE NO DEVICES ON THE LIST!"3050 GO TO 31703060 PRINT "DEVICE NUMBER	PRIMARY ADDRESS	SECONDARY ADDRESS"3070 FOR I1=1 TO N03080 PRINT "
";I1,D1(I1),D2(I1)3090 NEXT I13100 PRINT "
THERE ARE ";N0;" DEVICES AVAILABLE;"3110 PRINT "#";D0;" IS THE CURRENTLY ACTIVE DEVICE; AFTER A SERIAL"3120 PRINT "POLL, ";3130 IF M0=0 THEN 31603140 PRINT "ITS ADDRESSED-STATUS WILL BE RESTORED."3150 GO TO 31703160 PRINT "THE BUS WILL BE UNLISTENED AND UNTALKED."3170 REM ALTER DEVICE LIST3180 PRINT "
WOULD YOU LIKE TO ALTER THE LIST?  NOTE: IF YOU ANSWER"3190 PRINT """YES"", THE ENTIRE LIST MUST BE RE-ENTERED. ";3200 INPUT T$3210 IF LEN(T$)=0 THEN 35803220 IF ASC(T$)<>89 AND ASC(T$)<>121 THEN 35803230 PRINT "HOW MANY DEVICES TOTAL WILL THERE BE (1 TO 9): ";3240 INPUT N03250 IF N0<>INT(N0) OR N0<1 OR N0>9 THEN 32303260 DELETE D1,D23270 D0=13280 DIM D1(N0),D2(N0)3290 D1=-13300 D2=-13310 PRINT "
ENTER PRIMARY & SECONDARY ADDRESSES FOR EACH DEVICE."3320 PRINT "TO IGNORE A SECONDARY ADDRESS, ENTER 32.
"3330 FOR I2=1 TO N03340 PRINT "#";I2;" PRIMARY: ";3350 INPUT D1(I2)3360 IF D1(I2)<>INT(D1(I2)) OR D1(I2)<1 OR D1(I2)>30 THEN 34103370 PRINT "	SECONDARY: ";3380 INPUT D2(I2)3390 IF D2(I2)<>INT(D2(I2)) OR D2(I2)<0 OR D2(I2)>32 THEN 34103400 GO TO 34303410 PRINT "
ILLEGAL ADDRESS REQUESTED.  TRY AGAIN."3420 GO TO 33403430 NEXT I23440 IF N0=1 THEN 34903450 PRINT "
PRINCIPAL ACTIVE DEVICE (1 TO ";N0;"): ";3460 INPUT D03470 IF D0<>INT(D0) THEN 34503480 IF D0<1 OR D0>N0 THEN 34503490 PRINT "
AFTER A SERIAL POLL IS DONE, DO YOU WANT THE ADDRESSED"3500 PRINT "STATUS (IDLE/LISTENER/TALKER) OF THE PRINCIPAL ACTIVE"3510 PRINT "DEVICE RESTORED (Y or N_): ";3520 M0=03530 INPUT T$3540 IF LEN(T$)=0 THEN 30003550 IF ASC(T$)=78 OR ASC(T$)=110 THEN 30003560 M0=13570 GO TO 30003580 PAGE 3590 RETURN 4000 REM *--*--*  SUBROUTINE TO SEND COMMAND TO INSTRUMENT  *--*--*4010 PRINT "";4020 REM CHECK FOR EMBEDDED CR's  <CR>4030 T=POS(I$,"<CR>",1)4040 IF T=0 THEN 40804050 T$=CHR(13)4060 I$=REP(T$,T,4)4070 GO TO 40304080 REM REPLACE |	|'s WITH |?|'s4090 T=POS(I$,"	",1)4100 IF T=0 THEN 41304110 I$=REP("?",T,1)4120 GO TO 40904130 IF T0(1)=0 THEN 41504140 WBYTE @63:4150 IF T0(2)=0 THEN 42104160 IF D2(D0)<>32 THEN 41904170 WBYTE @32+D1(D0):4180 GO TO 42004190 WBYTE @32+D1(D0),96+D2(D0):4200 M1=14210 REM SEND ALL BUT THE LAST BYTE4220 FOR I0=1 TO LEN(I$)-14230 T$=SEG(I$,I0,1)4240 T=ASC(T$)4250 IF LEN(I$)=I0 THEN 42804260 WBYTE T4270 NEXT I04280 REM NOW FIGURE OUT THE TERMINATION TO GO WITH THE LAST BYTE4290 T$=SEG(I$,LEN(I$),1)4300 T=ASC(T$)4310 GO TO T0(3)+T0(4)*2+T0(5)*4 OF 4340,4360,4380,4400,4420,4440,44604320 WBYTE T4330 GO TO 44704340 WBYTE T,134350 GO TO 44704360 WBYTE T,104370 GO TO 44704380 WBYTE T,13,104390 GO TO 44704400 WBYTE -T4410 GO TO 44704420 WBYTE T,-134430 GO TO 44704440 WBYTE T,-104450 GO TO 44704460 WBYTE T,13,-104470 IF T0(6)=0 THEN 44904480 WBYTE @95:4490 IF T0(7)=0 THEN 45204500 WBYTE @63:4510 M1=04520 RETURN 5000 REM *--*--*--*  SUBROUTINE TO GET RESPONSE FROM DUT *--*--*--*5010 PRINT @32,18:55020 PRINT "#";5030 PRINT @32,18:05040 REM SEND 'UNL' MAYBE5050 IF T0(8)=0 THEN 50705060 WBYTE @63:5070 REM SEND 'MTA' MAYBE5080 IF T0(9)=0 THEN 51405090 IF D2(D0)<>32 THEN 51205100 WBYTE @64+D1(D0):5110 GO TO 51305120 WBYTE @64+D1(D0),96+D2(D0):5130 M1=25140 REM NOW RECEIVE THE MESSAGE5150 RBYTE A5160 IF ABS(A)=>128 THEN 51805170 T$=CHR(ABS(A))5180 REM DISPLAY ASCII W/ACTIVE CTRL CHARS ONLY IF5190 REM M=2 AND A>=0 AND A<=1275200 IF M<>2 OR (ABS(A)>127 AND A>-256) THEN 52405202 IF A>-256 THEN 52105204 T$=CHR(0)5206 GO TO 52125210 T$=CHR(ABS(A))5212 IF A>-1 THEN 52205214 T$=T$&"&EOI>"5215 T$="<"&T$5220 PRINT T$;5230 GO TO 53805240 REM DISPLAY ASCII W/PRINTED CTRL CHARS ONLY IF5250 REM M=3 AND ABS(A)<=1275260 IF M<>3 OR (ABS(A)>127 AND A>-256) THEN 53305270 IF ABS(A)>32 AND A>-256 THEN 52105272 IF A>-256 THEN 52805274 T$="NUL"5276 GO TO 52905280 T$=SEG(A$,ABS(A)*4+1,3)5290 IF NOT(POS(T$," ",1)) THEN 53025300 T$=REP("",3,1)5302 IF A=>0 THEN 53105304 T$=T$&"&EOI"5310 PRINT "<";T$;">";5320 GO TO 53805330 REM IF IT GETS HERE, DISPLAY DECIMAL (PERHAPS NOT BY CHOICE)5340 IF M=1 THEN 53705342 IF A>0 THEN 53505344 PRINT "<";ABS(A);"&EOI>";5346 GO TO 53805350 PRINT "<";A;">";5360 GO TO 53805370 IF A>-1 THEN 53785375 PRINT "<";ABS(A);"&EOI>";5376 GO TO 53805378 PRINT A;5380 REM SEE IF RECEPTION SHOULD BE ENDED5390 IF A<0 OR A=10 OR A=13 OR A=255 THEN 54105400 GO TO 51305410 IF T0(10) AND ABS(A)=13 THEN 54605420 IF T0(11) AND ABS(A)=10 THEN 54605430 IF T0(12) AND ABS(A)=255 THEN 54605440 IF T0(13) AND A<0 THEN 54605450 GO TO 51505460 REM END RECEPTION5470 REM SEND 'UNT' MAYBE5480 IF T0(14)=0 THEN 55105490 WBYTE @95:5500 M1=05510 REM SEND 'UNL' MAYBE5520 IF T0(15)=0 THEN 55405530 WBYTE @63:5540 PRINT @32,18:55550 PRINT "#"5560 PRINT @32,18:05570 RETURN 6000 REM *--*--*--*--*--*  SRQ HANDLER (ALL DEVICES)  *--*--*--*--*--*6010 FOR I3=1 TO N06020 GOSUB 60906030 NEXT I36040 RETURN 6050 REM *--*--*--*--*--*  SRQ HANDLER (DEVICE #D0)  *--*--*--*--*--*6060 I3=D06070 GOSUB 60906080 RETURN 6090 REM *--*--*--*--*  SERIAL POLLER (DEVICE #I3)  *--*--*--*--*6100 PRINT "";6110 IF D2(I3)<>32 THEN 61406120 WBYTE @95,63,24,64+D1(I3):6130 GO TO 61506140 WBYTE @95,63,24,64+D1(I3),96+D2(I3):6150 RBYTE B6160 WBYTE @95,25:6170 REM ALSO SET UP TO DISPLAY STB IN BINARY6180 B1=06190 T=B6200 FOR I4=8 TO 1 STEP -16210 IF T<2^(I4-1) THEN 62406220 T=T-2^(I4-1)6230 B1(9-I4)=16240 NEXT I46250 IMAGE FA,D,": ",4D,3X,4(D),X,4(D)6260 PRINT USING 6250:"	STB FOR DEV #",I3,B,B16270 REM RESTORE ADDRESSED STATUS OF ACTIVE DEVICE6280 IF M0=0 OR M1=0 THEN 63406290 PRINT 6300 IF M1=1 THEN 63306310 GOSUB 23506320 GO TO 63406330 GOSUB 23006340 RETURN 7000 REM  *--*--*--*--*--*--*  GIVE DIRECTIONS  *--*--*--*--*--*--*7010 PRINT "                    GPIB GENERAL DEVICE EXERCISER"7020 PRINT "              BY: John Burgess, TEKTRONIX, Nov. 12, 1982"7030 PRINT 7040 PRINT "      ";7050 PRINT "FOR 405X AS CONTROLLER-IN-CHARGE AND GPIB INSTRUMENTATION"7060 PRINT "

THIS PROGRAM PROVIDES THE FACILITIES TO SEND COMMANDS ";7070 PRINT "TO A DEVICE UNDER"7080 PRINT "TEST, AND TO RECEIVE RESPONSES FROM IT.  SOME ";7090 PRINT "FEATURES ARE:  1) THE CAR-"7100 PRINT "RIAGE RETURN CHARACTER ($0D) MAY BE SENT WITHIN THE ";7110 PRINT "COMMAND STRING BY"7120 PRINT "INCLUDING THE CHARACTERS: ""<CR>"";  2) IF A ""?"" IS ";7130 PRINT "FOUND IN THE COMMAND"7140 PRINT "STRING, THE PROGRAM WILL AUTOMATICALLY TRY TO GET A ";7150 PRINT "RESPONSE FROM THE"7160 PRINT "DEVICE;  3) SEVERAL OPTIONS ARE AVAILABLE CONCERNING ";7170 PRINT "COMMUNICATION PRO-"7180 PRINT "TOCOL -- (USE ""I_TRM"" OR UDK #18);  4) ALL PROGRAM ";7190 PRINT "CONTROL COMMANDS EX-"7200 PRINT "CEPT ""LF"" ARE 3 LETTERS PRECEDED BY CTRL-I (THE TAB)."7210 PRINT "
THERE ARE THREE COMMANDS TO CONTROL THE DISLAY MODE ";7220 PRINT "WHEN RECEIVING"7230 PRINT "INFORMATION FROM THE DUT:"7240 PRINT "  ""I_DEC"" (UDK #16) PRINTS THE ASCII VALUE (IN ";7250 PRINT "DECIMAL) OF EACH CHARACTER"7260 PRINT "  ""I_ASC""  (UDK #7) PRINTS THE ASCII REPRESENTA";7270 PRINT "TION OF EACH CHARACTER RE-"7280 PRINT "	 CEIVED.  CONTROL CHARACTERS ARE ";7290 PRINT "ACTED UPON."7300 PRINT "  ""I_PCN"" (UDK #17) SAME AS ""ASC"", EXCEPT THE ";7310 PRINT "MNEMONIC OF THE CONTROL"7320 PRINT "	 CHARACTER IS PRINTED."7330 PRINT "IN ANY DISPLAY MODE, IF A CHARACTER WHOSE ASCII VALUE ";7340 PRINT "IS GREATER THAN"7350 PRINT "127 IS RECEIVED, ITS ASCII VALUE (IN DECIMAL) IS PRINTED."7360 PRINT "
THE PROGRAM CAN HANDLE UP TO 9 INSTRUMENTS ON THE BUS ";7370 PRINT "AT ONCE.  ONLY 1"7380 PRINT "OF THE 9 IS THE ""CURRENTLY ACTIVE DEVICE"".  TO CHANGE ";7390 PRINT "THE PRIMARY DEV-"7400 PRINT "ICE, ENTER ""I_n""; WHERE ""n"" IS THE NEW DEVICE ";7410 PRINT "NUMBER.  THE COMMAND TO"7420 PRINT "DISPLAY OR ALTER THE INSTRUMENT LIST IS ""I_DEV"" (OR ";7430 PRINT "UDK #19).  IN RES-"7440 PRINT "PONSE TO THE 'SRQ' LINE BEING ASSERTED, EVERY INSTRUMENT ";7450 PRINT "ON THE INST-"7460 PRINT "RUMENT LIST IS SERIAL POLLED.  ONLY THE CURRENT DEVICE ";7470 PRINT "IS POLLED IN"7480 PRINT "RESPONSE TO THE ""I_POL"" COMMAND (OR UDK #8)."7490 PRINT "
	<CR> TO CONTINUE:";7500 INPUT T$7510 PRINT "OTHER PROGRAM CONTROL COMMANDS ARE:"7520 PRINT "     ""I_DIR"" REPEATS THIS LIST OF DIRECTIONS"7530 PRINT "     ""I_END"" (OR UDK #11) ENDS THE PROGRAM NICELY"7540 PRINT "     UDK #1 PROVIDES AN EASY RESTART AFTER A <BREAK>";7550 PRINT " OR 'END'."7560 PRINT "

SEVERAL GPIB INTERFACE COMMANDS ARE EASILY SENT:"7570 PRINT "
COMMAND","ATN MESSAGE SENT
"7580 PRINT " ""I_GTL""","MLA, [MSA], GTL ($01)"7590 PRINT " ""I_SDC""","MLA, [MSA], SDC ($04)"7600 PRINT " ""I_GET""","MLA, [MSA], GET ($08)"7610 PRINT " ""I_LLO""","LLO ($11)"7620 PRINT " ""I_DCL""","DCL ($14)"7630 PRINT " ""I_SPE""","SPE ($18)"7640 PRINT " ""I_SPD""","SPD ($19)"7650 PRINT " ""I_MLA""","MLA, [MSA]"7660 PRINT " ""I_MTA""","MTA, [MSA]"7670 PRINT " ""I_UNL""","UNL ($3F)"7680 PRINT " ""I_UNT""","UNT ($5F)"7690 PRINT "
NOTES: 1) [MSA] IS OPTIONALLY USED FOR EXTENDED ";7700 PRINT "ADDRESSING."7710 PRINT "       2) PPC, PPU, IFC AND TCT ARE NOT IMPLEMENTED."7720 PRINT "

	<CR> FOR FEATURE SUMMARY: ";7730 INPUT T$7740 REM 	DIR & UDK #20 ENTER HERE FOR FEATURE SUMMARY7750 PRINT "P  R  O  G  R  A  M     C  O  N  T  R  O  L     C  ";7760 PRINT "O  M  M  A  N  D  S
"7770 PRINT "I_DEC    UDK #16"," SELECTS DECIMAL DISPLAY MODE"7780 PRINT "I_ASC    UDK # 7"," SELECTS ASCII DISPLAY MODE ";7790 PRINT "(ACTIVE CONTROL CHARACTERS)"7800 PRINT "I_PCN    UDK #17"," SAME AS ""ASC""; PRINTS CONTROL ";7810 PRINT "CHARACTERS' MNEMONICS"7820 PRINT "I_DEV    UDK #19"," DISPLAY/ALTER INSTRUMENT LIST"7830 PRINT "I_REC    UDK # 6"," MAKES ACTIVE DEVICE TALKER, & 4051 ";7840 PRINT "LISTENS"7850 PRINT "I_POL    UDK # 8"," SERIAL POLLS CURRENTLY ACTIVE DEVICE"7860 PRINT "I_TRM    UDK #18"," SET UP COMMUNICATION PROTOCOL"7870 PRINT "I_DIR    UDK #20"," DISPLAYS THIS FEATURE SUMMARY"7880 PRINT "I_END    UDK #11"," TERMINATES PROGRAM EXECUTION"7890 PRINT "        UDK # 1","CONVENIENT RESTART AFTER <BREAK>"7900 PRINT "I_RPC    UDK #10"," REPEATS PREVIOUS COMMAND"7910 PRINT "I_DEF"," SETS DEFAULT PROTOCOL TO SIMULATE 405X I/O"7920 PRINT "I_LF"," SETS PROTOCOL TO LINE-FEED MODE"7930 PRINT "I_EOI"," SETS PROTOCOL TO EOI MODE"7940 PRINT "I_UDF"," SETS THE USER-PROGRAMMED DEFAULT PROTOCOL"7950 PRINT "I_ASR"," TOGGLES ""ADDRESSED STATUS RESTORATION"" MODE"7960 PRINT "I_n             "," SETS ""ACTIVE DEVICE"" TO n"7970 PRINT "

I  N  T  E  R  F  A  C  E     C  O  M  M  A  N  D  S
"7980 PRINT "I_GTL    UDK # 5","SENDS ""MLA, [MSA], GO TO LOCAL"""7990 PRINT "I_SDC    UDK #14","SENDS ""MLA, [MSA], SELECTED DEVICE";8000 PRINT "CLEAR"""8010 PRINT "I_GET    UDK # 9","SENDS ""MLA, [MSA], GROUP EXECUTE ";8020 PRINT "TRIGGER"8030 PRINT "I_LLO    UDK #15","SENDS ""LOCAL LOCK-OUT"" ";8040 PRINT "(NO ADDRESSING)"8050 PRINT "I_DCL    UDK # 4","SENDS ""DEVICE CLEAR"" (NO ADDRESSING)"8060 PRINT "I_SPE","SENDS ""SERIAL POLL ENABLE"" (NO ADDRESSING)"8070 PRINT "I_SPD","SENDS ""SERIAL POLL DISABLE"" (NO ADDRESSING)"8080 PRINT "I_MLA    UDK # 3","SENDS ""MY LISTEN ADDRESS, [MY ";8090 PRINT "SECONDARY ADDRESS]"""8100 PRINT "I_MTA    UDK # 2","SENDS ""MY TALK ADDRESS, [MY ";8110 PRINT "SECONDARY ADDRESS]"""8120 PRINT "I_UNT    UDK #12","SENDS ""UNTALK"""8130 PRINT "I_UNL    UDK #13","SENDS ""UNLISTEN""";8140 PRINT "		<CR> TO CONTINUE: ";8150 INPUT T$8160 PAGE 8170 RETURN 9000 REM *--*--*--*  REVIEW/CHANGE COMMUNUCATION PROTOCOL  *--*--*--*9010 PRINT "	  4051 OUTPUTTING INFO TO DUT"9020 PRINT "	(DEFAULTS SIMULATE 4051 ""PRINT"")
"9030 PRINT " 1)	UNL		Don't send UNL (Def)"9040 PRINT " 2)	MLA (Def)		Don't send MLA"9050 PRINT 9060 PRINT " 3)	<CR> (Def)		Don't send <CR>"9070 PRINT " 4)	<LF>		Don't send <LF> (Def)"9080 PRINT " 5)	EOI (Def)		suppress EOI"9090 PRINT " 6)	UNT (Def)		Don't send UNT"9100 PRINT " 7)	UNL (Def)		Don't send UNL"9110 PRINT "

	  4051 RECEIVING INFO FROM DUT"9120 PRINT "	(DEFAULTS SIMULATE 4051 ""INPUT"")
"9130 PRINT " 8)	UNL		Don't send UNL (Def)"9140 PRINT " 9)	MTA (Def)		Don't send MTA"9150 PRINT 9160 PRINT "10)	<CR> (Def)		not on <CR>"9170 PRINT "11)	<LF>		not on <LF> (Def)"9180 PRINT "12)	$FF (Def)		not on $FF"9190 PRINT "13)	EOI (Def)		not on EOI"9200 PRINT "14)	UNT (Def)		Don't send UNT"9210 PRINT "15)	UNL (Def)		Don't send UNL"9220 PRINT "

"9230 FOR I5=1 TO 159240 IF T0(I5)=1 THEN 92609250 PRINT "		";9260 PRINT "         >>>>>>"9270 IF I5<>2 THEN 92909280 PRINT 9290 IF I5<>7 THEN 93109300 PRINT "



"9310 IF I5<>9 THEN 93309320 PRINT 9330 NEXT I59340 PRINT "
     NOW ENTER:"9350 PRINT "  DEF   TO RESTORE THE DEFAULT CONDITIONS,"9360 PRINT "  LF    TO SET UP FOR LINE-FEED TERMINATION MODE,"9370 PRINT "  EOI   TO SET UP FOR EOI TERMINATION MODE,"9380 PRINT "  UDF   TO SET UP USER-DEFINED CUSTOM SETUP,"9390 PRINT "  MAN   TO INVOKE MANUAL SELECTION,"9400 PRINT "  <CR>  TO EXIT (NO CHANGES DESIRED)."9410 PRINT "	";9420 INPUT T$9430 IF LEN(T$)=0 THEN 99509440 REM PARAMETERS FOR "DEF"9450 IF T$<>"DEF" THEN 95109460 DATA 0,1,1,0,1,1,1,0,1,1,0,1,1,1,19470 REM ALTERNATE ENTRY POINT FROM COMMAND PROCESSOR TO SET "DEF" MODE9480 RESTORE 94609490 READ T09500 GO TO 90009510 REM PARAMETERS FOR "LF"9520 IF T$<>"LF" THEN 95809530 DATA 0,1,0,1,1,1,1,0,1,0,1,0,1,1,19540 REM ALTERNATE ENTRY POINT FROM COMMAND PROCESSOR TO SET "LF" MODE9550 RESTORE 95309560 READ T09570 GO TO 90009580 REM PARAMETERS FOR "EOI"9590 IF T$<>"EOI" THEN 96509600 DATA 0,1,0,0,1,1,1,0,1,0,0,0,1,1,19610 REM ALTERNATE ENTRY POINT FROM COMMAND PROCESSOR TO SET "EOI" MODE9620 RESTORE 96009630 READ T09640 GO TO 90009650 IF T$<>"UDF" THEN 97109660 DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,09670 REM ALTERNATE ENTRY POINT FROM COMMAND PROCESSOR TO SET "UDF" MODE9680 RESTORE 96609690 READ T09700 GO TO 90009710 REM SINCE IT GOT HERE, ENTER MANUAL SELECTION MODE9720 PRINT "





THE BLINKING ? WILL APPEAR BETWEEN THE 2 COLUMNS.  ";9730 PRINT "ENTER ""<"" OR "">"" TO"9740 PRINT "SELECT YOUR DESIRED OPTION; CARRIAGE RETURN ";9750 PRINT "LEAVES SETTING UNCHANGED.";9760 PRINT "

"9770 PRINT @32,18:59780 FOR I5=1 TO 159790 PRINT "		# #";9800 INPUT T$9810 IF T$<>"<" THEN 98409820 T0(I5)=19830 GO TO 98609840 IF T$<>">" THEN 98609850 T0(I5)=09860 IF I5<>2 THEN 98809870 PRINT 9880 IF I5<>7 THEN 99009890 PRINT "



"9900 IF I5<>9 THEN 99209910 PRINT 9920 NEXT I59930 PRINT @32,18:09940 GO TO 90009950 PAGE 9960 RETURN 10000 REM *--*--*--*--*--*--*  END IT  *--*--*--*--*--*--*10010 PRINT "





	PROGRAM DONE -- BYE";10020 END 20000 REM RENUMBER 20010 RENUMBER 100,10,10020020 RENUMBER 1000,10,100020030 RENUMBER 2000,5,200020040 RENUMBER 3000,10,300020050 RENUMBER 4000,10,400020060 RENUMBER 5000,10,500020070 RENUMBER 6000,10,600020080 RENUMBER 7000,10,700020090 RENUMBER 9000,10,900020100 RENUMBER 10000,10,1000020110 RENUMBER 20000,10,2000020120 END 