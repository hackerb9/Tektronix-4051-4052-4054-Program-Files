4000 REM **** FILE 6 - DC5010 ****4005 F$="DC5010 Settings Test"4010 FOR L1=1 TO L4015 PRINT @D0:"<<";F$;">>  Loop ";L1;" of ";L;"     Unit ";P(N4)4100 REM4105 REM                                               *** Verify ID ***4110 REM4115 A$="ID TEK/DC5010,V"4120 GOSUB 27004200 REM4205 REM                            *** Verify settings after 'INIT' ***4210 REM4215 A$="INIT;CHA A;LEV 0;CHA B;LEV 0;SET?;"4220 GOSUB 5004225 GOSUB 6004230 I$="FREQ A;CHA A;ATT  1;COU DC;SLO POS;TER HIGH;LEV  0.000;"4235 I$=I$&"CHA B;ATT  1;COU DC;SLO POS;TER HIGH;LEV  0.000;"4240 I$=I$&"AVE -1;OPC OFF;OVER OFF;PRE OFF;FIL OFF;"4245 I$=I$&"NULL OFF;DT OFF;USER OFF;RQS ON;"4250 IF B$=I$ THEN 43004255 GOSUB 59004300 REM4305 REM                                                  *** 'TEST' ***4310 REM4315 A$="TEST;"4320 GOSUB 5004325 FOR I=1 TO 5004330 REM  Pause to allow sufficient time to complete 'TEST'.4335 NEXT I4340 GOSUB 6004345 REM ^^^ Get results of 'TEST'.4350 I$=" 0;"4355 IF B$=I$ THEN 44004360 REM  Do a 'GETSTA' to check status byte of inst.4365 WBYTE @95,63,24,64+P(N4):4370 RBYTE X4375 WBYTE @95,25:4380 IF X=65 THEN 43954385 PRINT @D0:"***** Status not POWER UP after 'TEST' command."4390 PRINT @D0:"Status byte returned was: ";X4395 GOSUB 59004400 REM  Set inst. to another function (e.g. 'FREQ') to disable 'TEST'4405 A$="FREQ A;"4410 GOSUB 5004500 REM4505 REM                    *** USER, RQS, OPC, OVER, PRE, FIL, NULL ***4510 REM4515 RESTORE 60154520 V=04525 FOR I=1 TO 74530 READ H$4535 FOR J=1 TO 34540 GOSUB J OF 5400,5450,54004545 NEXT J4550 NEXT I4600 REM4605 REM          *** FREQ, PER, WID, TIME, RISE, FAL, TOT, EVE, RAT ***4610 REM4615 V=04620 RESTORE 61154625 FOR I=1 TO 94630 READ H$,K4635 FOR J=1 TO K4640 READ S$4645 GOSUB 55004650 NEXT J4655 NEXT I4700 REM4705 REM   *** Do rest of test twice - once each for CHA A and CHA B ***4710 REM4715 FOR C=1 TO 24720 V=04725 H$="CHA"4730 IF C=2 THEN 47454735 S$="A"4740 GO TO 47504745 S$="B"4750 GOSUB 55504800 REM4805 REM                                 *** TERM, DT, COU, SLO, ATT ***4810 REM4815 V=04820 RESTORE 62154825 FOR I=1 TO 54830 READ H$,K4835 FOR J=1 TO K4840 READ S$4845 GOSUB 55504850 NEXT J4855 NEXT I4900 REM4905 REM                   *** TMAN, START, STOP, RESET, READY, SEND ***4910 REM4915 I$="TMAN;"4920 A$=I$&"FUNC?;"4925 GOSUB 5004930 GOSUB 6004935 IF B$=I$ THEN 49454940 GOSUB 59004945 A$="RESET;"4950 GOSUB 5004955 A$="RDY?;"4960 GOSUB 5004965 GOSUB 6004970 I$="RDY  0;"4975 IF B$=I$ THEN 49854980 GOSUB 59004985 A$="START;RDY?;"4990 GOSUB 5004995 GOSUB 6005000 I$="RDY  1;"5005 IF B$=I$ THEN 50155010 GOSUB 59005015 A$="STOP;SEND;"5020 GOSUB 5005025 GOSUB 6005030 I$="00.0;"5035 IF B$=I$ THEN 50455040 GO TO 50555045 I$="Other than "&I$5050 GOSUB 59005055 A$="RDY?;"5060 GOSUB 5005065 GOSUB 6005070 I$="RDY  0;"5075 IF B$=I$ THEN 51005080 GOSUB 59005100 REM5105 REM                                                     *** AVE ***5110 REM5115 V=15120 FOR K=8 TO 0 STEP -15125 H$="AVE"5130 J=10^K5135 GOSUB 56005140 NEXT K5145 J=-15150 GOSUB 56005200 REM5205 REM                                                     *** LEV ***5210 REM5215 V=15220 DELETE K1,K2,K35225 RESTORE 63155230 FOR I=1 TO 45235 READ H$,K1,K2,K35240 FOR K=K1 TO K2 STEP K35245 J=K/10005250 GOSUB 56005255 NEXT K5260 NEXT I5300 REM5305 REM                                                    *** ERR? ***5310 REM5315 I$="ERR  0;"5320 A$="INIT;"5325 GOSUB 5005330 A$="ERR?;"5335 GOSUB 5005340 GOSUB 6005345 REM ^^^ Flush out last error code5350 GOSUB 5005355 GOSUB 6005360 REM ^^^ Get up-dated Error Register5365 IF B$=I$ THEN 53755370 GOSUB 59005375 NEXT C5380 NEXT L15385 RETURN 5400 REM5405 REM                                          *** Header & 'OFF' ***5410 REM5415 A$=H$&" OFF"5420 Q$=H$5425 GO TO 57005450 REM5455 REM                                           *** Header & 'ON' ***5460 REM5465 A$=H$&" ON"5470 Q$=H$5475 GO TO 57005500 REM5505 REM                             *** Header & Argument & 'FUNC?' ***5510 REM5515 A$=H$&" "5520 A$=A$&S$5525 Q$="FUNC"5530 GO TO 57005550 REM5555 REM                             *** Header & Argument & Header? ***5560 REM5565 A$=H$&" "5570 A$=A$&S$5575 Q$=H$5580 GO TO 57005600 REM5605 REM                                         *** Header & STR(J) ***5610 REM5615 S$=STR(J)5620 A$=H$&" "5625 A$=A$&S$5630 Q$=H$5700 REM5705 REM                                                *** Build A$ ***5710 REM5715 A$=A$&";"5720 I$=A$5725 A$=A$&Q$5730 A$=A$&"?;"5735 GOSUB 58005740 RETURN 5800 REM5805 REM                                                 *** Put/Get ***5810 REM5815 GOSUB 5005820 GOSUB 6005825 IF V=0 THEN 58755830 X1=POS(B$," ",1)5835 X2=POS(B$,";",X1)5840 Z$=SEG(B$,1,X1-1)5845 X$=SEG(B$,X1,X2-X1)5850 X=VAL(X$)5855 X$=STR(X)5860 B$=Z$&" "5865 B$=B$&X$5870 B$=B$&";"5875 IF B$=I$ THEN 58855880 GOSUB 59005885 RETURN 5900 REM5905 REM                                                  *** Set E$ ***5910 REM5915 E$="Incorrect response to "5920 E$=E$&A$5925 GOSUB 25005930 RETURN 6000 REM6005 REM                                         *** First 6 Headers ***6010 REM6015 DATA "USER","RQS","OPC","OVER","PRE","FIL","NULL"6100 REM6105 REM             *** Next 9 Headers, no. of Arguments, Arguments ***6110 REM6115 DATA "FREQ",1,"A"6120 DATA "PER",1,"A"6125 DATA "WID",1,"A"6130 DATA "TIME",1,"AB"6135 DATA "RISE",1,"A"6140 DATA "FAL",1,"A"6145 DATA "TOT",3,"A","A+B","A-B"6150 DATA "EVE",1,"BA"6155 DATA "RAT",1,"B/A"6200 REM6205 REM             *** Next 5 Headers, no. of Arguments, Arguments ***6210 REM6215 DATA "TERM",2,"LOW","HIGH"6220 DATA "DT",3,"TRIG","GATE","OFF"6225 DATA "COU",2,"AC","DC"6230 DATA "SLO",2,"POS","NEG"6235 DATA "ATT",2," 1"," 5"6300 REM6305 REM   *** Header, Starting Argument, Ending Argument, Step Size ***6310 REM6315 DATA "ATT",1000,1000,16320 DATA "LEV",2024,-2048,-246325 DATA "ATT",5000,5000,16330 DATA "LEV",10200,-10240,-120